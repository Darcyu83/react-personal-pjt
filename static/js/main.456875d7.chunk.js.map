{"version":3,"sources":["atoms.ts","api.ts","components/motion/slider/PageSlider.tsx","routes/Movie.tsx","theme.ts","components/UpperMenu.tsx","components/coin/Coin.tsx","components/coin/Coins.tsx","routes/coin/Coinlist.tsx","components/coin/Chart.tsx","components/coin/Price.tsx","components/coin/CoinInfo.tsx","components/todolist/RegTodo.tsx","components/todolist/TodoItms.tsx","components/todolist/CateBox.tsx","components/todolist/RegCate.tsx","routes/todo/Todolist.tsx","components/motion/Motion.tsx","components/motion/AniPresence.tsx","components/motion/slider/CardSlider.tsx","routes/slider/Slider.tsx","components/movie/MovieDetail.tsx","components/responsive/GridFlexCss.tsx","components/common/Select.tsx","components/movie/MovieLayout.tsx","routes/movie/MovieHome.tsx","components/responsive/ResponsiveGrid.tsx","App.tsx","index.tsx"],"names":["darkModeState","atom","key","default","coinsState","todoData","todoLoaded","API_KEY","setLocalToDoData","data","Object","keys","length","window","localStorage","setItem","JSON","stringify","getMoviesListAPI","cate","fetch","then","res","json","makeImgPath","size","imgPath","InnerWrapper","styled","div","Title","h1","SliderWrapper","props","xLength","SliderInnerWrapper","CardWrapper","motion","isInitial","margin","Card","width","bgPhoto","CardTitle","p","Pagination","button","PageBtn","pageSliderVariants","enter","direction","x","innerWidth","opacity","center","exit","PageSlider","useState","useQuery","isLoading","currPageIdx","setCurrPage","onNextPage","increment","newIdx","dataLength","Math","ceil","results","setIsAnimeComplete","curr","isAnimeComplete","toUpperCase","AnimatePresence","initial","custom","onExitComplete","variants","animate","transition","type","stiffness","damping","duration","slice","map","movie","idx","to","pathname","state","movieId","id","poster_path","whileHover","scale","title","onClick","result","i","push","backgroundColor","onRenderBtn","Wrapper","Banner","bgPath","BannerInfo","BannerTitle","BannerDesc","Overlay","OutterBox","InfoPoster","img","InnerBox","theme","accentColor","InfoTitle","InfoDesc","Movie","nowPlaying","popular","topRated","history","useHistory","nowPlayingData","detailInfo","setDetailInfo","popMatch","useRouteMatch","useLocation","console","log","useEffect","matchedData","getMatchedData","find","Number","backdrop_path","overview","goBack","src","darkTheme","bgColor","textColor","breakpoints","r360","r540","r640","r720","r960","r1080","r1280","lightTheme","Grid","Logo","Svg","svg","HiddenMenu","MenuTitle","ToggleContainer","ToggleBackground","ToggleCircle","menuVariants","top","color","scroll","menuIndicatorAttrs","borderBottom","subMenuAnimate","height","fontSize","delay","UpperMenu","useRecoilState","isDarkMode","setIsDarkMode","isHovered","setIsHovered","scrollY","useViewportScroll","homeMatch","moviesMatch","coinListMatch","toDoListMatch","motionMatch","animateMatch","sliderMatch","responsiveMatch","gridMatch","menuAnimation","useAnimation","onChange","value","start","focusable","xmlns","viewBox","path","pathLength","fill","d","style","isExact","onHoverStart","onHoverEnd","background","ACoin","li","Coin","coin","name","symbol","toLowerCase","alt","Status","span","Coins","setIsLoading","coins","setCoins","getData","a","React","memo","Coinlist","Chart","useRecoilValue","coinId","useParams","endDate","floor","Date","now","startDate","response","sData","series","values","quotes","USD","options","chart","toolbar","show","xaxis","categories","labels","rotate","yaxis","mode","palette","tooltip","y","formatter","toFixed","Price","InfoSpan","Tabs","Tab","CoinInfo","coinState","setACoinState","Input","input","Btn","Form","form","RegTodo","cateName","useForm","register","handleSubmit","setValue","formState","setToDoData","onSubmit","toDoCnts","startDt","endDt","newToDo","allBoardData","required","minLength","message","placeholder","errors","Info","DelBtn","TodoItms","cnts","setTodoData","useSetRecoilState","allBoards","findIndex","board","Items","ul","CateBox","dataObj","isTodoLoaded","dataCopy","isLoaded","delLocalToDoData","todo","RegCate","newBoard","CateList","Todolist","toDoData","setIsTodoLoaded","localData","getItem","parse","Box","Circle","BigBox","boxVariants","hover","border","active","Motion","idClicked","setIdClicked","prevPrevId","setPrevPrevId","prevId","setPrevId","isPoped","setIsPoped","layoutId","onPop","AsBody","AsContainer","Img","images","zIndex","Movies","page","setPage","paginate","newDirection","currPage","min","max","rotateIdx","left","right","CardSlider","CARD_WIDTH","CARD_OFFSET_WIDTH","setCurrIdx","arrLength","setXLength","setIsInitial","onNextCard","e","newlength","abs","setTimeout","item","Divider","hr","Slider","InfoWrapper","ImgWrapper","Image","SubTitle","h2","Genres","Genre","Overview","VoteAvg","ReleasedDate","MovieDetail","getMovieDetail","genres","genre","vote_average","release_date","GridWrapper","FullWidthSection","section","MaxWidthSection","Row","GridBox","columns","rows","itemMinHeight","GridItem","startCol","spanCol","startRow","spanRow","FlexBox","FlexItem","GridFlexCss","SelectTag","select","Select","selectProps","qntyShowed","opt","selected","text","MovieCard","ListIndicator","MovieCardTitle","movieCardProps","boxShadow","GridCss","isNowComplete","setIsNowComplete","setIsTopComplete","pageNowPlay","setPpageNowPlay","pageTopRated","setPageTopRated","qntyNowShowed","setQntyNowShowed","qntyTopShowed","setQntyTopShowed","topRatedData","position","maxPage","alert","onNextNowPlay","currentTarget","onNextTopRated","MovieHome","MovieLayout","GlobalStyle","createGlobalStyle","App","basename","process","ResponsiveGrid","AniPresence","queryClient","QueryClient","ReactDOM","render","StrictMode","client","document","getElementById"],"mappings":"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","file":"static/js/main.456875d7.chunk.js","sourcesContent":["import { atom } from \"recoil\";\r\n\r\nexport const darkModeState = atom({\r\n  key: \"darkMode\",\r\n  default: false,\r\n});\r\n\r\nexport interface ICoins {\r\n  id: string;\r\n  name: string;\r\n  symbol: string;\r\n  rank: number;\r\n  is_new: boolean;\r\n  is_active: boolean;\r\n  type: string;\r\n}\r\n\r\nexport interface IACoin {\r\n  beta_value: number;\r\n  circulating_supply: number;\r\n  first_data_at: string;\r\n  id: string;\r\n  last_updated: string;\r\n  max_supply: number;\r\n  name: string;\r\n  quotes: IQuotes;\r\n  rank: string;\r\n  symbol: string;\r\n  total_supply: number;\r\n}\r\n\r\nexport interface IQuotes {\r\n  USD: {\r\n    ath_date: string;\r\n    ath_price: number;\r\n    market_cap: number;\r\n    market_cap_change_24h: number;\r\n    percent_change_1h: number;\r\n    percent_change_1y: number;\r\n    percent_change_6h: number;\r\n    percent_change_7d: number;\r\n    percent_change_12h: number;\r\n    percent_change_15m: number;\r\n    percent_change_24h: number;\r\n    percent_change_30d: number;\r\n    percent_change_30m: number;\r\n    percent_from_price_ath: number;\r\n    price: number;\r\n    volume_24h: number;\r\n    volume_24h_change_24h: number;\r\n  };\r\n}\r\n\r\nexport const coinsState = atom<ICoins[]>({\r\n  key: \"coinsState\",\r\n  default: [],\r\n});\r\n\r\nexport const aCoinState = atom<IACoin[]>({\r\n  key: \"aCoinState\",\r\n  default: [],\r\n});\r\n\r\nexport const todoCateState = atom<string[]>({\r\n  key: \"category\",\r\n  default: [],\r\n});\r\n\r\nexport interface IToDo {\r\n  id: number;\r\n  startDt?: string;\r\n  endDt?: string;\r\n  toDoCnts: string;\r\n}\r\n\r\nexport interface IToDoData {\r\n  [cate: string]: IToDo[];\r\n}\r\n\r\nexport const todoData = atom<IToDoData>({\r\n  key: \"todoDAta\",\r\n  default: {},\r\n});\r\n\r\nexport const todoLoaded = atom<boolean>({\r\n  key: \"todoLoaded\",\r\n  default: false,\r\n});\r\n\r\n// interface IPopularMovies {\r\n//   page: number;\r\n//   results: [];\r\n//   total_pages: number;\r\n//   total_results: number;\r\n// }\r\n\r\nexport interface IMovie {\r\n  id: number;\r\n  backdrop_path: string;\r\n  poster_path: string;\r\n  title: string;\r\n  overview: string;\r\n  genres: { id: number; name: string }[];\r\n  release_date: string;\r\n  vote_average: number;\r\n}\r\n\r\nexport interface IGetMoviesResult {\r\n  dates: { minimum: string; maximum: string };\r\n  page: number;\r\n  results: IMovie[];\r\n  total_pages: number;\r\n  total_results: number;\r\n}\r\n\r\nexport const popularMovies = atom({\r\n  key: \"popularMovies\",\r\n  default: [],\r\n});\r\n","import { IToDoData } from \"./atoms\";\r\n\r\nconst API_KEY = `72caad34e2c43d870d78d98ae9a0980b`;\r\n\r\nexport function getLocalToDoData() {\r\n  return window.localStorage.getItem(\"todo\");\r\n}\r\n\r\nexport const setLocalToDoData = (data: IToDoData) => {\r\n  if (Object.keys(data).length !== 0) {\r\n    window.localStorage.setItem(\"todo\", JSON.stringify(data));\r\n  }\r\n};\r\n\r\nexport const delLocalToDoData = (\r\n  data: IToDoData,\r\n  isLoaded?: boolean | undefined\r\n) => {\r\n  if (isLoaded) {\r\n    window.localStorage.setItem(\"todo\", JSON.stringify(data));\r\n  }\r\n};\r\n\r\nexport interface IMovieCategory {\r\n  cate: \"now_playing\" | \"popular\" | \"top_rated\";\r\n}\r\n\r\nexport function getMoviesListAPI(\r\n  cate: \"now_playing\" | \"popular\" | \"top_rated\"\r\n) {\r\n  return fetch(\r\n    `https://api.themoviedb.org/3/movie/${cate}?api_key=${API_KEY}&language=en-US&page=1`\r\n  ).then((res) => res.json());\r\n}\r\n\r\nexport function makeImgPath(size: string, imgPath?: string) {\r\n  if (!imgPath) return;\r\n  return `https://image.tmdb.org/t/p/${size}/${imgPath}`;\r\n}\r\n\r\nexport function getMovieDetail(movieId: string) {\r\n  return fetch(`\r\n  https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`).then(\r\n    (response) => response.json()\r\n  );\r\n}\r\n","import { AnimatePresence, motion } from \"framer-motion\";\r\nimport React, { useState } from \"react\";\r\nimport { useQuery } from \"react-query\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { getMoviesListAPI, IMovieCategory, makeImgPath } from \"../../../api\";\r\nimport { IGetMoviesResult } from \"../../../atoms\";\r\n\r\nconst InnerWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: flex-start;\r\n  background-color: rgba(0, 0, 0, 0.8);\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  display: block;\r\n  color: white;\r\n  width: 100%;\r\n  background-color: black;\r\n  font-weight: bold;\r\n  padding: 10px 50px;\r\n`;\r\n\r\nconst SliderWrapper = styled.div<{ xLength?: number }>`\r\n  margin: 0px 50px;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  width: ${(props) => props.xLength}px;\r\n  min-width: ${(props) => props.xLength}px;\r\n  position: relative;\r\n  max-width: 95%;\r\n`;\r\n\r\nconst SliderInnerWrapper = styled.div<{ xLength?: number }>`\r\n  margin: 0px auto;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  width: ${(props) => props.xLength}px;\r\n  position: relative;\r\n  padding: 20px 0px;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst CardWrapper = styled(motion.div)<{\r\n  xLength?: number;\r\n  isInitial?: boolean;\r\n  margin?: number;\r\n}>`\r\n  display: flex;\r\n  transition: transform ${(props) => (props.isInitial ? 0 : 0.5)}s;\r\n  transform: translateX(${(props) => (props.xLength ? -props.xLength : 0)}px);\r\n\r\n  div {\r\n    margin-right: ${(props) => props.margin}px;\r\n  }\r\n  div:first-child {\r\n    transform-origin: left;\r\n  }\r\n  div:last-child {\r\n    transform-origin: right;\r\n  }\r\n`;\r\n\r\nconst Card = styled(motion.div)<{ width?: number; bgPhoto?: string }>`\r\n  width: ${(props) => props.width}px;\r\n  height: 300px;\r\n  background-image: url(${(props) => props.bgPhoto});\r\n  background-size: cover;\r\n  background-position: center center;\r\n  display: flex;\r\n  align-items: flex-end;\r\n  z-index: 9999;\r\n`;\r\n\r\nconst CardTitle = styled.p`\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  color: white;\r\n  padding: 5px 3px;\r\n  min-height: 50px;\r\n  width: 100%;\r\n`;\r\nconst Btn = styled.button`\r\n  position: absolute;\r\n  top: 200px;\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 20px;\r\n`;\r\n\r\nconst Pagination = styled(motion.div)`\r\n  margin: 10px auto;\r\n  width: fit-content;\r\n  color: white;\r\n  font-weight: bold;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 1rem;\r\n\r\n  div:first-child,\r\n  div:last-child {\r\n    background-color: transparent;\r\n  }\r\n`;\r\nconst PageBtn = styled(motion.div)`\r\n  margin: 0 5px;\r\n  min-width: 15px;\r\n  min-height: 10px;\r\n  background-color: rgba(255, 255, 255, 0.5);\r\n  border-radius: 10px;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst pageSliderVariants = {\r\n  enter: (direction: number) => {\r\n    return {\r\n      x: direction > 0 ? window.innerWidth : -window.innerWidth,\r\n      opacity: 0,\r\n    };\r\n  },\r\n  center: (direction: number) => {\r\n    return {\r\n      x: 0,\r\n      opacity: 1,\r\n    };\r\n  },\r\n  exit: (direction: number) => {\r\n    return {\r\n      x: direction > 0 ? -window.innerWidth : window.innerWidth,\r\n      opacity: 0,\r\n    };\r\n  },\r\n};\r\nfunction PageSlider({ cate }: IMovieCategory) {\r\n  const CARD_WIDTH = 200;\r\n  const CARD_MARGIN = 3;\r\n  const CARD_OFFSET_WIDTH = CARD_WIDTH + CARD_MARGIN;\r\n  const CARD_QNTY = 7; //  1 to 7\r\n  const DATA_QNTY_SHOWED = 20;\r\n\r\n  const [arrLength, setArrLength] = useState(DATA_QNTY_SHOWED);\r\n\r\n  const { isLoading, data } = useQuery<IGetMoviesResult>([\"movies\", cate], () =>\r\n    getMoviesListAPI(cate)\r\n  );\r\n\r\n  // page slider\r\n  const [[currPageIdx, direction], setCurrPage] = useState([0, 0]);\r\n\r\n  const onPaginate = (idx: number) => {\r\n    setIsAnimeComplete((curr) => !curr);\r\n    setCurrPage(([curr, direction]) => {\r\n      return [idx, idx > curr ? 1 : -1];\r\n    });\r\n  };\r\n\r\n  const onNextPage = (increment: number) => {\r\n    let newIdx = currPageIdx + increment;\r\n    let dataLength = 0;\r\n    if (data) dataLength = Math.ceil(data.results.length / CARD_QNTY) - 1;\r\n    if (newIdx < 0 || newIdx > dataLength) return;\r\n    setIsAnimeComplete((curr) => !curr);\r\n\r\n    setCurrPage(([curr, direction]) => {\r\n      newIdx =\r\n        curr + increment > dataLength || curr + increment < 0\r\n          ? curr\r\n          : curr + increment;\r\n      return [newIdx, increment];\r\n    });\r\n  };\r\n\r\n  const onRenderBtn = () => {\r\n    const result = [];\r\n    if (data) {\r\n      for (let i = 0; i < Math.ceil(data?.results.length / CARD_QNTY); i++) {\r\n        result.push(\r\n          <PageBtn\r\n            key={i}\r\n            animate={\r\n              currPageIdx === i\r\n                ? { width: \"30px\", backgroundColor: \"rgba(255,255,255,0.9)\" }\r\n                : {}\r\n            }\r\n            transition={{\r\n              type: \"spring\",\r\n              damping: 20,\r\n            }}\r\n            onClick={() => onPaginate(i)}\r\n          ></PageBtn>\r\n        );\r\n      }\r\n    }\r\n    return result;\r\n  };\r\n\r\n  const [isAnimeComplete, setIsAnimeComplete] = useState(true);\r\n\r\n  const onExitcomplete = () => {\r\n    setIsAnimeComplete(true);\r\n  };\r\n\r\n  return (\r\n    <InnerWrapper>\r\n      <Title> \"{cate.toUpperCase()}\" Slider /w Pagination</Title>\r\n      <SliderWrapper>\r\n        <SliderInnerWrapper\r\n          xLength={(CARD_OFFSET_WIDTH + CARD_MARGIN) * CARD_QNTY}\r\n        >\r\n          <AnimatePresence\r\n            initial={false}\r\n            custom={direction}\r\n            onExitComplete={onExitcomplete}\r\n          >\r\n            {isAnimeComplete && (\r\n              <CardWrapper\r\n                key={currPageIdx}\r\n                custom={direction}\r\n                margin={CARD_MARGIN}\r\n                variants={pageSliderVariants}\r\n                initial=\"enter\"\r\n                animate=\"center\"\r\n                exit=\"exit\"\r\n                transition={{\r\n                  x: { type: \"spring\", stiffness: 300, damping: 30 },\r\n                  opacity: { duration: 0.2 },\r\n                }}\r\n              >\r\n                {data?.results\r\n                  .slice(\r\n                    currPageIdx * CARD_QNTY,\r\n                    currPageIdx * CARD_QNTY + CARD_QNTY\r\n                  )\r\n                  .map((movie, idx) => (\r\n                    <>\r\n                      <Link\r\n                        to={{\r\n                          pathname: `/pop`,\r\n                          state: {\r\n                            movieId: movie.id,\r\n                            cate: cate,\r\n                          },\r\n                        }}\r\n                      >\r\n                        <Card\r\n                          key={idx}\r\n                          width={200}\r\n                          bgPhoto={makeImgPath(\"w500\", movie.poster_path)}\r\n                          whileHover={{\r\n                            scale: 1.1,\r\n                          }}\r\n                          transition={{ duration: 0.3 }}\r\n                        >\r\n                          <CardTitle>{movie.title}</CardTitle>\r\n                        </Card>\r\n                      </Link>\r\n                    </>\r\n                  ))}\r\n              </CardWrapper>\r\n            )}\r\n          </AnimatePresence>\r\n        </SliderInnerWrapper>\r\n      </SliderWrapper>\r\n      <Pagination>\r\n        <PageBtn onClick={() => onNextPage(-1)}>&lt;</PageBtn>\r\n        {onRenderBtn()}\r\n        <PageBtn onClick={() => onNextPage(1)}>&gt;</PageBtn>\r\n      </Pagination>\r\n    </InnerWrapper>\r\n  );\r\n}\r\n\r\nexport default PageSlider;\r\n","import { AnimatePresence, motion } from \"framer-motion\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useQuery } from \"react-query\";\r\nimport { ReactQueryDevtools } from \"react-query/devtools\";\r\nimport {\r\n  Link,\r\n  useHistory,\r\n  useLocation,\r\n  useParams,\r\n  useRouteMatch,\r\n} from \"react-router-dom\";\r\nimport { constSelector } from \"recoil\";\r\nimport styled from \"styled-components\";\r\nimport { makeImgPath, getMoviesListAPI } from \"../api\";\r\nimport { IGetMoviesResult, IMovie } from \"../atoms\";\r\nimport PageSlider from \"../components/motion/slider/PageSlider\";\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100vw;\r\n  height: 100%;\r\n  background-image: linear-gradient(rgba(0, 0, 0, 0.1) rgba(0, 0, 0, 1));\r\n`;\r\n\r\nconst Banner = styled.div<{ bgPath: string | undefined }>`\r\n  background-image: url(${(props) => props.bgPath});\r\n  background-size: cover;\r\n  background-position: center center;\r\n  width: 100%;\r\n  height: 70vh;\r\n\r\n  display: flex;\r\n  align-items: flex-end;\r\n`;\r\n\r\nconst BannerInfo = styled.div`\r\n  padding: 20px;\r\n  color: white;\r\n  background-color: rgba(0, 0, 0, 0.4);\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst BannerTitle = styled.h1`\r\n  font-size: 3rem;\r\n`;\r\n\r\nconst BannerDesc = styled.p``;\r\n\r\nconst Overlay = styled.div`\r\n  position: fixed;\r\n  display: block;\r\n  top: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.3);\r\n  z-index: 101;\r\n`;\r\n\r\nconst OutterBox = styled.div`\r\n  width: 60%;\r\n\r\n  min-height: 550px;\r\n  height: 80%;\r\n  background-color: rgba(0, 0, 0, 0.8);\r\n  color: white;\r\n  margin: 0 auto;\r\n  top: 100px;\r\n  position: fixed;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 20px;\r\n  border-radius: 10px;\r\n  z-index: 102;\r\n  left: 50%;\r\n  transform: translate(-50%, 0);\r\n`;\r\nconst InfoPoster = styled.img`\r\n  width: 40%;\r\n  margin-right: 10px;\r\n`;\r\nconst InnerBox = styled.div`\r\n  width: 60%;\r\n  padding: 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  a {\r\n    padding: 20px;\r\n    width: fit-content;\r\n    color: ${(props) => props.theme.accentColor};\r\n    align-self: flex-end;\r\n  }\r\n`;\r\nconst InfoTitle = styled.h1`\r\n  font-size: 2.5rem;\r\n`;\r\nconst InfoDesc = styled.p`\r\n  font-size: 1rem;\r\n`;\r\n\r\nfunction Movie() {\r\n  const nowPlaying = useQuery<IGetMoviesResult>([\"movies\", \"now_playing\"], () =>\r\n    getMoviesListAPI(\"now_playing\")\r\n  );\r\n  const popular = useQuery<IGetMoviesResult>([\"movies\", \"popular\"], () =>\r\n    getMoviesListAPI(\"popular\")\r\n  );\r\n  const topRated = useQuery<IGetMoviesResult>([\"movies\", \"top_rated\"], () =>\r\n    getMoviesListAPI(\"top_rated\")\r\n  );\r\n\r\n  const history = useHistory();\r\n\r\n  const nowPlayingData = nowPlaying.data?.results;\r\n  const [detailInfo, setDetailInfo] = useState<IMovie>();\r\n  const popMatch = useRouteMatch<{ movieId: string; cate: string }>(\"/pop\");\r\n  const { state } = useLocation<{ movieId: string; cate: string }>();\r\n  console.log(\"popMath\", popMatch);\r\n\r\n  const getMatchedData = () => {\r\n    if (popMatch) {\r\n      console.log(\" state.cate\", state.movieId, state.cate);\r\n\r\n      if (nowPlaying && popular && topRated) {\r\n        if (state.cate === \"now_playing\") {\r\n          return nowPlaying;\r\n        } else if (state.cate === \"popular\") {\r\n          return popular;\r\n        } else if (state.cate === \"top_rated\") {\r\n          return topRated;\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const matchedData = getMatchedData();\r\n\r\n    console.log(\"useEffect Data\", matchedData?.data?.results);\r\n    setDetailInfo(\r\n      matchedData?.data?.results.find(\r\n        (movie) => movie.id === Number(state.movieId)\r\n      )\r\n    );\r\n  }, [popMatch]);\r\n\r\n  const onClearOverlay = () => {\r\n    history.goBack();\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      {!nowPlaying.isLoading ? (\r\n        <>\r\n          <Banner\r\n            bgPath={\r\n              nowPlayingData\r\n                ? makeImgPath(\"original\", nowPlayingData[0]?.backdrop_path)\r\n                : \"\"\r\n            }\r\n          >\r\n            <BannerInfo>\r\n              <BannerTitle>\r\n                <Link\r\n                  to={{\r\n                    pathname: `/pop`,\r\n                    state: {\r\n                      movieId: nowPlayingData && nowPlayingData[0].id,\r\n                      cate: \"now_playing\",\r\n                    },\r\n                  }}\r\n                >\r\n                  {nowPlayingData\r\n                    ? nowPlayingData[0]?.title.toUpperCase()\r\n                    : null}\r\n                </Link>\r\n              </BannerTitle>\r\n              <BannerDesc>\r\n                {nowPlayingData ? nowPlayingData[0]?.overview : null}\r\n              </BannerDesc>\r\n            </BannerInfo>\r\n          </Banner>\r\n          <PageSlider cate=\"now_playing\" />\r\n          <PageSlider cate=\"popular\" />\r\n          <PageSlider cate=\"top_rated\" />\r\n        </>\r\n      ) : null}\r\n      <AnimatePresence>\r\n        {popMatch && (\r\n          <>\r\n            <Overlay onClick={onClearOverlay}></Overlay>\r\n            <OutterBox>\r\n              {detailInfo ? (\r\n                <>\r\n                  <InfoPoster\r\n                    src={makeImgPath(\"w500\", detailInfo.poster_path)}\r\n                  />\r\n                  <InnerBox>\r\n                    <InfoTitle>{detailInfo.title}</InfoTitle>\r\n                    <InfoDesc>{detailInfo.overview}</InfoDesc>\r\n                    <Link\r\n                      to={{\r\n                        pathname: `/detail${detailInfo.id}`,\r\n                        state: {\r\n                          movieId: detailInfo.id,\r\n                        },\r\n                      }}\r\n                    >\r\n                      Go Detail &gt;&gt;\r\n                    </Link>\r\n                  </InnerBox>\r\n                </>\r\n              ) : null}\r\n            </OutterBox>\r\n          </>\r\n        )}\r\n      </AnimatePresence>\r\n      {/* <ReactQueryDevtools initialIsOpen /> */}\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport default Movie;\r\n","import { DefaultTheme } from \"styled-components\";\r\n\r\nexport const darkTheme: DefaultTheme = {\r\n  bgColor: \"black\",\r\n  textColor: \"white\",\r\n  accentColor: \"tomato\",\r\n  breakpoints: {\r\n    r360: \"only screen and (max-width: 360px)\",\r\n    r540: \"only screen and (max-width: 540px)\",\r\n    r640: \"only screen and (max-width: 640px)\",\r\n    r720: \"only screen and (max-width: 720px)\",\r\n    r960: \"only screen and (max-width: 960px)\",\r\n    r1080: \"only screen and (max-width: 1080px)\",\r\n    r1280: \"only screen and (max-width: 1280px)\",\r\n  },\r\n};\r\n\r\nexport const lightTheme: DefaultTheme = {\r\n  bgColor: \"white\",\r\n  textColor: \"black\",\r\n  accentColor: \"tomato\",\r\n  breakpoints: {\r\n    r360: \"only screen and (max-width: 360px)\",\r\n    r540: \"only screen and (max-width: 540px)\",\r\n    r640: \"only screen and (max-width: 640px)\",\r\n    r720: \"only screen and (max-width: 720px)\",\r\n    r960: \"only screen and (max-width: 960px)\",\r\n    r1080: \"only screen and (max-width: 1080px)\",\r\n    r1280: \"only screen and (max-width: 1280px)\",\r\n  },\r\n};\r\n\r\n/*\r\nnHD (640 x 360)\r\nqHD (960 x 540)\r\nHD(1280x720)\r\nFHD(1920x1080)\r\nFHD+ (2460 x 1080)\r\nWFHD (2560 x 1080)\r\nDFHD (3840 x 1080)\r\nWUXGA (1920 x 1200)\r\nQHD/WQHD(2560x1440)\r\nQHD+ (3200 x 1440)\r\nWQHD (3440 x 1440)\r\nDQHD (5120 x 1440)\r\nWQXGA (2560 x 1600)\r\nWQHD+ (3840 x 1600)\r\n4K UHD / UHD (3840 x 2160)\r\n4K DCI (4096 x 2160)\r\nWUHD / UHD+ (5120 x 2160)\r\n8K UHD / FUHD (7680 x 4320)\r\n*/\r\n","import { motion, useAnimation, useViewportScroll } from \"framer-motion\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Link, useHistory, useRouteMatch } from \"react-router-dom\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport styled from \"styled-components\";\r\nimport { darkModeState } from \"../atoms\";\r\n\r\nconst Wrapper = styled(motion.div)`\r\n  width: 100%;\r\n  height: 80px;\r\n  margin: 0px auto;\r\n  color: ${(props) => props.theme.textColor};\r\n  /* background-color: rgba(255, 255, 255, 0.4); */\r\n  box-shadow: 0px 2px 5px ${(props) => props.theme.textColor};\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  position: fixed;\r\n  top: 0;\r\n  padding: 20px;\r\n  z-index: 100;\r\n  div:last-child {\r\n    padding: 0;\r\n  }\r\n`;\r\n\r\nconst Grid = styled.div`\r\n  display: grid;\r\n  padding: 20px;\r\n  grid-template-columns: 1fr 80px;\r\n  position: relative;\r\n\r\n  div:first-child {\r\n    justify-content: flex-start;\r\n  }\r\n`;\r\n\r\nconst InnerWrapper = styled(motion.div)`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  position: relative;\r\n`;\r\n\r\nconst Logo = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 5px;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst Svg = styled(motion.svg)`\r\n  width: 30px;\r\n  path {\r\n    stroke: rgba(46, 134, 222, 0.5);\r\n    stroke-width: 5;\r\n  }\r\n`;\r\n\r\nconst HiddenMenu = styled(motion.div)`\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  position: absolute;\r\n  left: 0px;\r\n  top: 60%;\r\n  a {\r\n    min-width: fit-content;\r\n    margin: 0px;\r\n    margin-right: 3px;\r\n  }\r\n`;\r\n\r\nconst MenuTitle = styled(motion.div)`\r\n  text-align: center;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst ToggleContainer = styled(motion.div)`\r\n  width: fit-content;\r\n  /* background: #313a3a; */\r\n  top: 0;\r\n  right: 0;\r\n  left: 0;\r\n  bottom: 0;\r\n  color: white;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n`;\r\n\r\nconst ToggleBackground = styled(motion.div)`\r\n  width: 40px;\r\n  height: 20px;\r\n  background-color: rgba(255, 255, 255, 0.4);\r\n  border-radius: 10px;\r\n  cursor: pointer;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst ToggleCircle = styled(motion.div)`\r\n  width: 20px;\r\n  height: 20px;\r\n  background-color: white;\r\n  border-radius: 40px;\r\n  border: 1px gray solid;\r\n`;\r\n\r\nconst menuVariants = {\r\n  top: { backgroundColor: \"rgba(255,255,255,0.4)\", color: \"inherit\" },\r\n  scroll: { backgroundColor: \"rgba(0,0,0,0.9)\", color: \"white\" },\r\n};\r\n\r\nconst menuIndicatorAttrs = {\r\n  borderBottom: \"2px solid blue\",\r\n};\r\n\r\nconst subMenuAnimate = {\r\n  enter: {\r\n    opacity: 1,\r\n    width: \" 300px\",\r\n    height: \"40px\",\r\n    fontSize: \"16px\",\r\n    transition: { duration: 0.5, delay: 0.1 },\r\n  },\r\n  exit: {\r\n    opacity: 0,\r\n    width: \"0px\",\r\n    height: \"0px\",\r\n    fontSize: \"0px\",\r\n    transition: { duration: 0.5, delay: 0.1 },\r\n  },\r\n};\r\n\r\nfunction UpperMenu() {\r\n  const [isDarkMode, setIsDarkMode] = useRecoilState(darkModeState);\r\n  const [isHovered, setIsHovered] = useState(false);\r\n  const { scrollY } = useViewportScroll();\r\n  const onToggle = () => {\r\n    setIsDarkMode((curr) => !curr);\r\n  };\r\n  const homeMatch = useRouteMatch(\"/\");\r\n  const moviesMatch = useRouteMatch(\"/movies\");\r\n  const tvMatch = useRouteMatch(\"/tv\");\r\n  const coinListMatch = useRouteMatch(\"/coinlist\");\r\n  const toDoListMatch = useRouteMatch(\"/todolist\");\r\n  const motionMatch = useRouteMatch(\"/motion\");\r\n  const animateMatch = useRouteMatch(\"/animate\");\r\n  const sliderMatch = useRouteMatch(\"/slider\");\r\n  const responsiveMatch = useRouteMatch(\"/responsive\");\r\n  const gridMatch = useRouteMatch(\"/grid\");\r\n  const history = useHistory();\r\n\r\n  const onHover = () => {\r\n    setIsHovered(true);\r\n  };\r\n  const onLeave = () => {\r\n    setIsHovered(false);\r\n  };\r\n\r\n  const menuAnimation = useAnimation();\r\n\r\n  useEffect(() => {\r\n    scrollY.onChange((value) => {\r\n      if (value > 100) {\r\n        menuAnimation.start(\"scroll\");\r\n      } else {\r\n        menuAnimation.start(\"top\");\r\n      }\r\n    });\r\n  });\r\n\r\n  const onGoHome = () => {\r\n    history.push(\"/\");\r\n  };\r\n  return (\r\n    <Wrapper\r\n      variants={menuVariants}\r\n      initial=\"top\"\r\n      animate={menuAnimation}\r\n      transition={{ duration: 0.5 }}\r\n    >\r\n      <Grid>\r\n        <InnerWrapper>\r\n          <Logo onClick={onGoHome}>\r\n            <Svg\r\n              aria-hidden=\"true\"\r\n              focusable=\"false\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              viewBox=\"0 0 320 512\"\r\n            >\r\n              <motion.path\r\n                initial={{\r\n                  pathLength: 0,\r\n                  fill: \"rgb(204, 35, 30,0)\",\r\n                }}\r\n                animate={{\r\n                  pathLength: 1,\r\n                  fill: \"rgba(204, 35, 30,1)\",\r\n                }}\r\n                transition={{ duration: 2 }}\r\n                fill=\"currentColor\"\r\n                d=\"M129.5 512V345.9L18.5 48h55.8l81.8 229.7L250.2 0h51.3L180.8 347.8V512h-51.3z\"\r\n              ></motion.path>\r\n            </Svg>\r\n            <Svg\r\n              aria-hidden=\"true\"\r\n              focusable=\"false\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              viewBox=\"0 0 384 512\"\r\n            >\r\n              <motion.path\r\n                initial={{\r\n                  pathLength: 0,\r\n                  fill: \"rgba(52, 166, 95,0)\",\r\n                }}\r\n                animate={{\r\n                  pathLength: 1,\r\n                  fill: \"rgba(52, 166, 95,1.0)\",\r\n                }}\r\n                transition={{ duration: 2 }}\r\n                fill=\"currentColor\"\r\n                d=\"M192 480c39.5 0 76.2-11.8 106.8-32.2H85.3C115.8 468.2 152.5 480 192 480zm-89.1-193.1v-12.4H0v12.4c0 2.5 0 5 .1 7.4h103.1c-.2-2.4-.3-4.9-.3-7.4zm20.5 57H8.5c2.6 8.5 5.8 16.8 9.6 24.8h138.3c-12.9-5.7-24.1-14.2-33-24.8zm-17.7-34.7H1.3c.9 7.6 2.2 15 3.9 22.3h109.7c-4-6.9-7.2-14.4-9.2-22.3zm-2.8-69.3H0v17.3h102.9zm0-173.2H0v4.9h102.9zm0-34.7H0v2.5h102.9zm0 69.3H0v7.4h102.9zm0 104H0v14.8h102.9zm0-69.3H0v9.9h102.9zm0 34.6H0V183h102.9zm166.2 160.9h109.7c1.8-7.3 3.1-14.7 3.9-22.3H278.3c-2.1 7.9-5.2 15.4-9.2 22.3zm12-185.7H384V136H281.1zm0 37.2H384v-12.4H281.1zm0-74.3H384v-7.4H281.1zm0-76.7v2.5H384V32zm-203 410.9h227.7c11.8-8.7 22.7-18.6 32.2-29.7H44.9c9.6 11 21.4 21 33.2 29.7zm203-371.3H384v-4.9H281.1zm0 148.5H384v-14.8H281.1zM38.8 405.7h305.3c6.7-8.5 12.6-17.6 17.8-27.2H23c5.2 9.6 9.2 18.7 15.8 27.2zm188.8-37.1H367c3.7-8 5.8-16.2 8.5-24.8h-115c-8.8 10.7-20.1 19.2-32.9 24.8zm53.5-81.7c0 2.5-.1 5-.4 7.4h103.1c.1-2.5.2-4.9.2-7.4v-12.4H281.1zm0-29.7H384v-17.3H281.1z\"\r\n              ></motion.path>\r\n            </Svg>\r\n            <Svg\r\n              aria-hidden=\"true\"\r\n              focusable=\"false\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              viewBox=\"0 0 416 512\"\r\n            >\r\n              <motion.path\r\n                initial={{\r\n                  pathLength: 0,\r\n                  fill: \"rgba(15, 138, 95,0)\",\r\n                }}\r\n                animate={{\r\n                  pathLength: 1,\r\n                  fill: \"rgba(15, 138, 95,1.0)\",\r\n                }}\r\n                transition={{ duration: 2 }}\r\n                fill=\"currentColor\"\r\n                d=\"M397.9 160H256V19.6L397.9 160zM304 192v130c0 66.8-36.5 100.1-113.3 100.1H96V84.8h94.7c12 0 23.1.8 33.1 2.5v-84C212.9 1.1 201.4 0 189.2 0H0v512h189.2C329.7 512 400 447.4 400 318.1V192h-96z\"\r\n              ></motion.path>\r\n            </Svg>\r\n            <Svg\r\n              aria-hidden=\"true\"\r\n              focusable=\"false\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              viewBox=\"0 0 512 512\"\r\n            >\r\n              <motion.path\r\n                initial={{\r\n                  pathLength: 0,\r\n                  fill: \"rgba(35, 94, 111,0)\",\r\n                }}\r\n                animate={{\r\n                  pathLength: 1,\r\n                  fill: \"rgba(35, 94, 111,1.0)\",\r\n                }}\r\n                transition={{ duration: 2 }}\r\n                fill=\"currentColor\"\r\n                d=\"M496 224H293.9l-87.17-26.83A43.55 43.55 0 0 1 219.55 112h66.79A49.89 49.89 0 0 1 331 139.58a16 16 0 0 0 21.46 7.15l42.94-21.47a16 16 0 0 0 7.16-21.46l-.53-1A128 128 0 0 0 287.51 32h-68a123.68 123.68 0 0 0-123 135.64c2 20.89 10.1 39.83 21.78 56.36H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h480a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm-180.24 96A43 43 0 0 1 336 356.45 43.59 43.59 0 0 1 292.45 400h-66.79A49.89 49.89 0 0 1 181 372.42a16 16 0 0 0-21.46-7.15l-42.94 21.47a16 16 0 0 0-7.16 21.46l.53 1A128 128 0 0 0 224.49 480h68a123.68 123.68 0 0 0 123-135.64 114.25 114.25 0 0 0-5.34-24.36z\"\r\n              ></motion.path>\r\n            </Svg>\r\n          </Logo>\r\n\r\n          <Link style={homeMatch?.isExact ? menuIndicatorAttrs : {}} to=\"/\">\r\n            Home\r\n          </Link>\r\n          <span> &nbsp; | &nbsp;</span>\r\n          <Link\r\n            style={moviesMatch?.isExact ? menuIndicatorAttrs : {}}\r\n            to=\"/movies\"\r\n          >\r\n            Movies\r\n          </Link>\r\n          <span> &nbsp; | &nbsp;</span>\r\n          <Link\r\n            style={responsiveMatch?.isExact ? menuIndicatorAttrs : {}}\r\n            to=\"/responsive\"\r\n          >\r\n            Responsive Grid\r\n          </Link>\r\n          <span> &nbsp; | &nbsp;</span>\r\n          <Link style={gridMatch?.isExact ? menuIndicatorAttrs : {}} to=\"/grid\">\r\n            Responsive Layout\r\n          </Link>\r\n          <span> &nbsp; | &nbsp;</span>\r\n          <InnerWrapper\r\n            onHoverStart={onHover}\r\n            onHoverEnd={onLeave}\r\n            transition={{ type: \"linear\", duration: 0.5 }}\r\n          >\r\n            <MenuTitle>Challenge</MenuTitle>\r\n            <HiddenMenu\r\n              variants={subMenuAnimate}\r\n              initial=\"exit\"\r\n              animate={isHovered ? \"enter\" : \"exit\"}\r\n            >\r\n              <Link\r\n                style={coinListMatch?.isExact ? menuIndicatorAttrs : {}}\r\n                to=\"/coinlist\"\r\n              >\r\n                Coin List\r\n              </Link>\r\n              <span> &nbsp; | &nbsp;</span>\r\n              <Link\r\n                style={toDoListMatch?.isExact ? menuIndicatorAttrs : {}}\r\n                to=\"/todolist\"\r\n              >\r\n                ToDo List\r\n              </Link>\r\n              <span> &nbsp; | &nbsp;</span>\r\n              <Link\r\n                style={motionMatch?.isExact ? menuIndicatorAttrs : {}}\r\n                to=\"/motion\"\r\n              >\r\n                Framer motion\r\n              </Link>\r\n              <span> &nbsp; | &nbsp;</span>\r\n              <Link\r\n                style={animateMatch?.isExact ? menuIndicatorAttrs : {}}\r\n                to=\"/animate\"\r\n              >\r\n                AnimatePresence\r\n              </Link>\r\n              <span> &nbsp; | &nbsp;</span>\r\n              <Link\r\n                style={sliderMatch?.isExact ? menuIndicatorAttrs : {}}\r\n                to=\"/slider\"\r\n              >\r\n                Slider\r\n              </Link>\r\n            </HiddenMenu>\r\n          </InnerWrapper>\r\n          {/* <Link style={tvMatch?.isExact ? menuIndicatorAttrs : {}} to=\"/tv\">\r\n            TV\r\n          </Link> */}\r\n        </InnerWrapper>\r\n\r\n        <InnerWrapper>\r\n          <ToggleContainer>\r\n            <ToggleBackground\r\n              onClick={onToggle}\r\n              style={{ background: isDarkMode ? \"#fffefe\" : \"#c2c0be\" }}\r\n            >\r\n              <ToggleCircle\r\n                animate={{ x: isDarkMode ? 20 : 0 }}\r\n                transition={{ type: \"spring\", stiffness: 700, damping: 30 }}\r\n                style={{\r\n                  background: isDarkMode ? \"#303030\" : \"#ffffff\",\r\n                }}\r\n              ></ToggleCircle>\r\n            </ToggleBackground>\r\n          </ToggleContainer>\r\n        </InnerWrapper>\r\n      </Grid>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport default UpperMenu;\r\n","import { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { ICoins } from \"../../atoms\";\r\n\r\nconst ACoin = styled.li`\r\n  background-color: ${(props) => props.theme.textColor};\r\n  color: ${(props) => props.theme.bgColor};\r\n  margin-bottom: 20px;\r\n  box-shadow: 0px 5px 10px #49a9e0;\r\n  transition: 0.5s;\r\n  a {\r\n    padding: 20px;\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n  &:hover {\r\n    color: #f1c40f;\r\n  }\r\n`;\r\n\r\ninterface ICoin {\r\n  coin: ICoins;\r\n}\r\n\r\nfunction Coin({ coin }: ICoin) {\r\n  return (\r\n    <>\r\n      <ACoin key={coin.id}>\r\n        <Link\r\n          to={{\r\n            pathname: `/coin/${coin.id}`,\r\n            state: {\r\n              id: coin.id,\r\n              name: coin.name,\r\n              symbol: coin.symbol,\r\n            },\r\n          }}\r\n        >\r\n          <img\r\n            style={{ width: \"1.5rem\", height: \"1.5rem\" }}\r\n            src={`https://cryptoicon-api.vercel.app/api/icon/${coin.symbol.toLowerCase()}`}\r\n            alt={coin.id}\r\n          />\r\n          &nbsp;&nbsp;&nbsp;\r\n          {coin.name}\r\n        </Link>\r\n      </ACoin>\r\n    </>\r\n  );\r\n}\r\nexport default Coin;\r\n","import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport styled from \"styled-components\";\r\nimport { coinsState } from \"../../atoms\";\r\nimport Coin from \"./Coin\";\r\n\r\nconst Status = styled.span`\r\n  color: ${(props) => props.theme.accentColor};\r\n  font-size: 1rem;\r\n  place-self: center;\r\n  margin-top: 80px;\r\n`;\r\n\r\nfunction Coins() {\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [coins, setCoins] = useRecoilState(coinsState);\r\n\r\n  const getData = async () => {\r\n    try {\r\n      const data = await (\r\n        await fetch(\"https://api.coinpaprika.com/v1/coins\")\r\n      ).json();\r\n      setCoins(data);\r\n      setIsLoading(false);\r\n    } catch (error) {}\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <ul>\r\n        {isLoading ? (\r\n          <Status>Loading...</Status>\r\n        ) : (\r\n          coins.slice(0, 20).map((coin) => <Coin key={coin.id} coin={coin} />)\r\n        )}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\nexport default React.memo(Coins);\r\n","import styled from \"styled-components\";\r\nimport Coins from \"../../components/coin/Coins\";\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100vw;\r\n  min-height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  background: linear-gradient(\r\n    -90deg,\r\n    rgba(255, 0, 0, 0.5),\r\n    rgba(84, 160, 255, 1)\r\n  );\r\n`;\r\nconst InnerWrapper = styled.div`\r\n  width: 650px;\r\n  margin: 20px auto;\r\n  margin-top: 100px;\r\n`;\r\nfunction Coinlist() {\r\n  return (\r\n    <Wrapper>\r\n      <InnerWrapper>\r\n        <h1>Today's Coins</h1>\r\n        <hr></hr>\r\n        <Coins />\r\n      </InnerWrapper>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport default Coinlist;\r\n","import ApexCharts from \"react-apexcharts\";\r\nimport { useQuery } from \"react-query\";\r\nimport { useLocation, useParams } from \"react-router-dom\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport styled from \"styled-components\";\r\nimport { darkModeState, IACoin } from \"../../atoms\";\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  height: 500px;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border: 1px solid ${(props) => props.theme.textColor};\r\n  border-top: 0;\r\n  font-size: 3rem;\r\n`;\r\n\r\nconst Title = styled.span`\r\n  font-size: 2rem;\r\n  color: tomato;\r\n`;\r\n\r\ninterface IHisData {\r\n  time_open: string;\r\n  time_close: string;\r\n  open: number;\r\n  high: number;\r\n  low: number;\r\n  close: number;\r\n  volume: number;\r\n  market_cap: number;\r\n}\r\n\r\nfunction Chart() {\r\n  const isDarkMode = useRecoilValue(darkModeState);\r\n  const { coinId } = useParams<{ coinId: string }>();\r\n  const { state } = useLocation<{ data: IACoin }>();\r\n\r\n  const getData = () => {\r\n    const endDate = Math.floor(Date.now() / 1000);\r\n    const startDate = endDate - 60 * 60 * 24 * 7;\r\n    return fetch(\r\n      `https://api.coinpaprika.com/v1/coins/${coinId}/ohlcv/historical?start=${startDate}&end=${endDate}`\r\n    ).then((response) => response.json());\r\n  };\r\n\r\n  console.log(useQuery<IHisData[]>(\"callAPI\", () => getData()));\r\n\r\n  const sData = {\r\n    series: [\r\n      {\r\n        name: \"Changing Rate\",\r\n        data: Object.values(state?.data.quotes.USD),\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Title>Change Rates</Title>\r\n      <ApexCharts\r\n        options={{\r\n          chart: {\r\n            toolbar: {\r\n              show: false,\r\n            },\r\n            background: \"transparent\",\r\n            width: \"100%\",\r\n          },\r\n          xaxis: {\r\n            categories: Object.keys(state?.data.quotes.USD),\r\n            labels: { rotate: -90 },\r\n          },\r\n          yaxis: { show: false },\r\n          theme: {\r\n            mode: isDarkMode ? \"dark\" : \"light\",\r\n            palette: \"pallete1\",\r\n          },\r\n          tooltip: {\r\n            y: {\r\n              formatter: (value) => value.toFixed(2),\r\n            },\r\n          },\r\n        }}\r\n        series={sData.series}\r\n        type=\"line\"\r\n        width=\"500\"\r\n      />\r\n    </Wrapper>\r\n  );\r\n}\r\nexport default Chart;\r\n","import styled from \"styled-components\";\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  height: 500px;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border: 1px solid ${(props) => props.theme.textColor};\r\n  border-top: 0;\r\n  font-size: 3rem;\r\n`;\r\nfunction Price() {\r\n  return <Wrapper>Price</Wrapper>;\r\n}\r\nexport default Price;\r\n","import { useEffect, useState } from \"react\";\r\nimport { Link, Route, Switch, useParams } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { IACoin } from \"../../atoms\";\r\nimport Chart from \"./Chart\";\r\nimport Price from \"./Price\";\r\n\r\nconst Wrapper = styled.div`\r\n  width: 650px;\r\n  margin: 20px auto;\r\n  margin-top: 80px;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst InnerWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  border-radius: 10px;\r\n  p {\r\n    margin: 20px auto;\r\n  }\r\n`;\r\n\r\nconst InfoSpan = styled.span`\r\n  border-radius: 5px;\r\n  width: 45%;\r\n  padding: 10px;\r\n  background-color: rgba(52, 73, 94, 0.5);\r\n`;\r\n\r\nconst Tabs = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  height: 60px;\r\n  background-color: rgba(186, 235, 198, 0.4);\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  border: 1px solid ${(props) => props.theme.textColor};\r\n  padding: 10px;\r\n`;\r\n\r\nconst Tab = styled.div`\r\n  color: ${(props) => props.theme.textColor};\r\n  text-align: center;\r\n  border-radius: 5px;\r\n  width: 45%;\r\n  background-color: rgba(52, 73, 94, 0.5);\r\n  padding: 10px;\r\n  a {\r\n    display: block;\r\n  }\r\n`;\r\n\r\nfunction CoinInfo() {\r\n  const { coinId } = useParams<{ coinId: string }>();\r\n\r\n  const [coinState, setACoinState] = useState<IACoin>();\r\n\r\n  const getData = async () => {\r\n    try {\r\n      const data = await (\r\n        await fetch(`https://api.coinpaprika.com/v1/tickers/${coinId}`)\r\n      ).json();\r\n\r\n      setACoinState(data);\r\n    } catch (error) {}\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  });\r\n\r\n  return (\r\n    <Wrapper>\r\n      <InnerWrapper>\r\n        <InfoSpan>ID: {coinState?.id}</InfoSpan>\r\n        <InfoSpan>Name: {coinState?.name}</InfoSpan>\r\n      </InnerWrapper>\r\n      <InnerWrapper>\r\n        <p>\r\n          {coinState?.name} :{coinState?.symbol}\r\n        </p>\r\n      </InnerWrapper>\r\n      <Tabs>\r\n        <Tab>\r\n          <Link\r\n            to={{\r\n              pathname: `/coin/${coinId}/chart`,\r\n              state: { data: coinState },\r\n            }}\r\n          >\r\n            Chart\r\n          </Link>\r\n        </Tab>\r\n        <Tab>\r\n          <Link to={`/coin/${coinId}/price`}>Price</Link>\r\n        </Tab>\r\n      </Tabs>\r\n\r\n      <Switch>\r\n        <Route path=\"/coin/:coinId/chart\">\r\n          <Chart />\r\n        </Route>\r\n        <Route path=\"/coin/:coinId/price\">\r\n          <Price />\r\n        </Route>\r\n      </Switch>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport default CoinInfo;\r\n","import styled from \"styled-components\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { IToDo, todoData } from \"../../atoms\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { setLocalToDoData } from \"../../api\";\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n`;\r\nconst InnerWrapper = styled.div``;\r\nconst Input = styled.input``;\r\nconst Btn = styled.button``;\r\nconst Form = styled.form`\r\n  width: 100%;\r\n  input {\r\n    width: 100%;\r\n  }\r\n  p {\r\n    font-size: 12px;\r\n    color: red;\r\n  }\r\n`;\r\n\r\nfunction RegTodo({ cateName }: { cateName: string }) {\r\n  const { register, handleSubmit, setValue, formState } = useForm<IToDo>();\r\n  const [data, setToDoData] = useRecoilState(todoData);\r\n\r\n  const onValid = ({ toDoCnts, startDt, endDt }: IToDo) => {\r\n    const newToDo = {\r\n      id: Date.now(),\r\n      toDoCnts,\r\n      startDt,\r\n      endDt,\r\n    };\r\n    setToDoData((allBoardData) => {\r\n      return {\r\n        ...allBoardData,\r\n        [cateName]: [...allBoardData[cateName], newToDo],\r\n      };\r\n    });\r\n\r\n    setValue(\"toDoCnts\", \"\");\r\n    setValue(\"startDt\", \"\");\r\n    setValue(\"endDt\", \"\");\r\n  };\r\n\r\n  setLocalToDoData(data);\r\n\r\n  return (\r\n    <Wrapper>\r\n      <InnerWrapper>\r\n        <Form onSubmit={handleSubmit(onValid)}>\r\n          <Input\r\n            {...register(\"toDoCnts\", {\r\n              required: \"할일은 필수 입력값입니다. \",\r\n              minLength: { value: 2, message: \"2자이상 입력하세요.\" },\r\n            })}\r\n            placeholder=\"Regist your Todo...\"\r\n          />\r\n          <p>{formState.errors.toDoCnts?.message}</p>\r\n          <Input\r\n            {...register(\"startDt\", { required: \"시작일을 입력하세요.\" })}\r\n            placeholder=\"Write start date...\"\r\n          />\r\n          <p>{formState.errors.startDt?.message}</p>\r\n          <Input\r\n            {...register(\"endDt\", { required: \"목표일을 입력하세요.\" })}\r\n            placeholder=\"Write end date...\"\r\n          />\r\n          <p>{formState.errors.endDt?.message}</p>\r\n          <Btn>Add</Btn>\r\n        </Form>\r\n      </InnerWrapper>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport default RegTodo;\r\n","import { useSetRecoilState } from \"recoil\";\r\nimport styled from \"styled-components\";\r\nimport { todoData } from \"../../atoms\";\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  text-align: left;\r\n  background-color: rgba(255, 255, 255, 0.9);\r\n  padding: 10px;\r\n  margin-bottom: 5px;\r\n`;\r\n\r\nconst Info = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n\r\n  span {\r\n    flex: 1;\r\n    min-width: 50px;\r\n  }\r\n  p {\r\n    flex: 3;\r\n    font-weight: bold;\r\n    min-width: 100px;\r\n  }\r\n`;\r\nconst DelBtn = styled.svg`\r\n  align-self: end;\r\n  width: 15px;\r\n  cursor: pointer;\r\n`;\r\n\r\nfunction TodoItms({\r\n  id,\r\n  startDt,\r\n  endDt,\r\n  cnts,\r\n  cateName,\r\n}: {\r\n  id: number;\r\n  startDt?: string;\r\n  endDt?: string;\r\n  cnts: string;\r\n  cateName: string;\r\n}) {\r\n  const setTodoData = useSetRecoilState(todoData);\r\n  const onClick = (cateName: string, id: number) => {\r\n    setTodoData((allBoards) => {\r\n      const idx = allBoards[cateName].findIndex((board) => board.id === id);\r\n\r\n      return {\r\n        ...allBoards,\r\n        [cateName]: [\r\n          ...allBoards[cateName].slice(0, idx),\r\n          ...allBoards[cateName].slice(idx + 1),\r\n        ],\r\n      };\r\n    });\r\n  };\r\n  return (\r\n    <Wrapper>\r\n      <DelBtn\r\n        onClick={() => onClick(cateName, id)}\r\n        focusable=\"false\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        viewBox=\"0 0 512 512\"\r\n      >\r\n        <path\r\n          fill=\"currentColor\"\r\n          d=\"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm0 448c-110.5 0-200-89.5-200-200S145.5 56 256 56s200 89.5 200 200-89.5 200-200 200zm101.8-262.2L295.6 256l62.2 62.2c4.7 4.7 4.7 12.3 0 17l-22.6 22.6c-4.7 4.7-12.3 4.7-17 0L256 295.6l-62.2 62.2c-4.7 4.7-12.3 4.7-17 0l-22.6-22.6c-4.7-4.7-4.7-12.3 0-17l62.2-62.2-62.2-62.2c-4.7-4.7-4.7-12.3 0-17l22.6-22.6c4.7-4.7 12.3-4.7 17 0l62.2 62.2 62.2-62.2c4.7-4.7 12.3-4.7 17 0l22.6 22.6c4.7 4.7 4.7 12.3 0 17z\"\r\n        ></path>\r\n      </DelBtn>\r\n      <Info>\r\n        <span>할일:</span>\r\n        <p>{cnts}</p>\r\n      </Info>\r\n      <Info>\r\n        <span>기간:</span>\r\n        <p>\r\n          {startDt} ~ {endDt}\r\n        </p>\r\n      </Info>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport default TodoItms;\r\n","import { useRecoilState, useRecoilValue } from \"recoil\";\r\nimport styled from \"styled-components\";\r\nimport { delLocalToDoData } from \"../../api\";\r\nimport { IToDo, todoData, todoLoaded } from \"../../atoms\";\r\nimport RegTodo from \"./RegTodo\";\r\nimport TodoItms from \"./TodoItms\";\r\n\r\nconst Wrapper = styled.li`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding: 5px;\r\n  background-color: rgba(200, 214, 229, 0.5);\r\n  margin: 0 5px;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  width: 100%;\r\n  padding: 10px;\r\n  text-align: center;\r\n  font-weight: bold;\r\n  text-decoration: underline;\r\n`;\r\n\r\nconst Items = styled.ul`\r\n  width: 100%;\r\n  min-height: 300px;\r\n  padding: 10px;\r\n\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  text-align: center;\r\n`;\r\n\r\nconst DelBtn = styled.svg`\r\n  align-self: end;\r\n  width: 15px;\r\n  cursor: pointer;\r\n`;\r\ninterface ICateBox {\r\n  dataObj: IToDo[];\r\n  cateName: string;\r\n  key: number;\r\n}\r\n\r\nfunction CateBox({ dataObj, cateName }: ICateBox) {\r\n  const [data, setToDoData] = useRecoilState(todoData);\r\n  const isTodoLoaded = useRecoilValue(todoLoaded);\r\n  const onClick = (cateName: string) => {\r\n    const dataCopy = { ...data };\r\n    delete dataCopy[cateName];\r\n    setToDoData(dataCopy);\r\n    delLocalToDoData(dataCopy, isTodoLoaded);\r\n  };\r\n  return (\r\n    <Wrapper>\r\n      <DelBtn\r\n        onClick={() => onClick(cateName)}\r\n        focusable=\"false\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        viewBox=\"0 0 512 512\"\r\n      >\r\n        <path\r\n          fill=\"currentColor\"\r\n          d=\"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm0 448c-110.5 0-200-89.5-200-200S145.5 56 256 56s200 89.5 200 200-89.5 200-200 200zm101.8-262.2L295.6 256l62.2 62.2c4.7 4.7 4.7 12.3 0 17l-22.6 22.6c-4.7 4.7-12.3 4.7-17 0L256 295.6l-62.2 62.2c-4.7 4.7-12.3 4.7-17 0l-22.6-22.6c-4.7-4.7-4.7-12.3 0-17l62.2-62.2-62.2-62.2c-4.7-4.7-4.7-12.3 0-17l22.6-22.6c4.7-4.7 12.3-4.7 17 0l62.2 62.2 62.2-62.2c4.7-4.7 12.3-4.7 17 0l22.6 22.6c4.7 4.7 4.7 12.3 0 17z\"\r\n        ></path>\r\n      </DelBtn>\r\n      <Title>{cateName.toUpperCase()}</Title>\r\n      <RegTodo cateName={cateName} />\r\n      <Items>\r\n        {dataObj.map((todo, idx) => (\r\n          <TodoItms\r\n            key={idx}\r\n            id={todo.id}\r\n            startDt={todo.startDt}\r\n            endDt={todo.endDt}\r\n            cnts={todo.toDoCnts}\r\n            cateName={cateName}\r\n          />\r\n        ))}\r\n      </Items>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport default CateBox;\r\n","import { useForm } from \"react-hook-form\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport styled from \"styled-components\";\r\nimport { setLocalToDoData } from \"../../api\";\r\nimport { todoData } from \"../../atoms\";\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  padding: 10px;\r\n  border: 1px solid rgba(255, 255, 255, 0.5);\r\n`;\r\n\r\nconst Form = styled.form`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  flex: 8 2 auto;\r\n  flex-wrap: wrap;\r\n\r\n  input {\r\n    flex: 1 1 80%;\r\n  }\r\n  button {\r\n    flex: 1 1 15%;\r\n  }\r\n\r\n  p {\r\n    flex: 1 1 80%;\r\n    color: red;\r\n    font-size: 12px;\r\n  }\r\n`;\r\nconst Input = styled.input`\r\n  width: 70%;\r\n`;\r\n\r\nconst Btn = styled.button`\r\n  margin: 0 10px;\r\n`;\r\n\r\nfunction RegCate() {\r\n  const { register, handleSubmit, formState, setValue } =\r\n    useForm<{ cate: string }>();\r\n  const [data, setToDoData] = useRecoilState(todoData);\r\n  const onValid = ({ cate }: { cate: string }) => {\r\n    setToDoData((allBoardData) => {\r\n      const newBoard = {\r\n        [cate]: [],\r\n      };\r\n      return { ...allBoardData, ...newBoard };\r\n    });\r\n    setValue(\"cate\", \"\");\r\n  };\r\n\r\n  setLocalToDoData(data);\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Form onSubmit={handleSubmit(onValid)}>\r\n        <Input\r\n          {...register(\"cate\", {\r\n            required: \"값을 입력하세요.\",\r\n          })}\r\n          placeholder=\"Regist your Todo categories ...\"\r\n        />\r\n        <Btn>Add</Btn>\r\n        <p>{formState.errors.cate?.message}</p>\r\n      </Form>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport default RegCate;\r\n","import { useEffect } from \"react\";\r\nimport { useRecoilState, useSetRecoilState } from \"recoil\";\r\nimport styled from \"styled-components\";\r\nimport { getLocalToDoData, setLocalToDoData } from \"../../api\";\r\nimport { todoData, todoLoaded } from \"../../atoms\";\r\nimport CateBox from \"../../components/todolist/CateBox\";\r\nimport RegCate from \"../../components/todolist/RegCate\";\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  min-height: 100vh;\r\n  height: 100%;\r\n  margin: 0 auto;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  padding: 20px;\r\n  padding-top: 90px;\r\n  color: ${(props) => props.theme.textColor};\r\n  background: linear-gradient(\r\n    45deg,\r\n    rgba(255, 0, 0, 0.5),\r\n    rgba(0, 255, 255, 0.5)\r\n  );\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  color: white;\r\n  font-weight: 400;\r\n  font-size: 3rem;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst CateList = styled.ul`\r\n  border: 1px solid rgba(255, 255, 255, 0.5);\r\n  width: 100%;\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 1fr);\r\n`;\r\n\r\nfunction Todolist() {\r\n  const [toDoData, setToDoData] = useRecoilState(todoData);\r\n  const setIsTodoLoaded = useSetRecoilState(todoLoaded);\r\n  setLocalToDoData(toDoData);\r\n\r\n  useEffect(() => {\r\n    const localData = getLocalToDoData();\r\n    if (localData) {\r\n      setToDoData(JSON.parse(localData));\r\n      setIsTodoLoaded(true);\r\n    }\r\n  });\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Title>To Do List</Title>\r\n      <RegCate />\r\n      <CateList>\r\n        {Object.keys(toDoData).map((cate, idx) => {\r\n          return <CateBox key={idx} cateName={cate} dataObj={toDoData[cate]} />;\r\n        })}\r\n      </CateList>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport default Todolist;\r\n","import styled from \"styled-components\";\r\nimport { useState } from \"react\";\r\nimport { AnimatePresence, motion } from \"framer-motion\";\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100vw;\r\n  height: 100vh;\r\n  display: flex;\r\n  padding-top: 80px;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background: cover;\r\n  flex-direction: column;\r\n  background: linear-gradient(\r\n    -45deg,\r\n    rgba(255, 0, 0, 0.5),\r\n    rgba(0, 255, 255, 0.5)\r\n  );\r\n`;\r\n\r\nconst Grid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 1fr);\r\n  gap: 10px;\r\n  div:first-child,\r\n  div:last-child {\r\n    grid-column: span 2;\r\n  }\r\n`;\r\n\r\nconst Box = styled(motion.div)`\r\n  min-width: 200px;\r\n  min-height: 100px;\r\n  background-color: white;\r\n  border-radius: 15px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Circle = styled(motion.div)`\r\n  background-color: #5f27cd;\r\n  width: 20px;\r\n  height: 20px;\r\n  border-radius: 10px;\r\n`;\r\n\r\nconst Overlay = styled(motion.div)`\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.2);\r\n  position: absolute;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst BigBox = styled(motion.div)`\r\n  width: 600px;\r\n  height: 300px;\r\n  background-color: rgb(0, 0, 0, 0.7);\r\n  border-radius: 15px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 999;\r\n`;\r\n\r\nconst boxVariants = {\r\n  hover: { scale: 1.2, y: -20, border: \"0.5px solid rgba(127,127,127,0.5)\" },\r\n  active: {},\r\n  exit: {},\r\n};\r\n\r\nconst Btn = styled.button`\r\n  margin: 5px 5px;\r\n  padding: 5px;\r\n  align-self: center;\r\n`;\r\n\r\nfunction Motion() {\r\n  const [idClicked, setIdClicked] = useState(\"\");\r\n  const [prevPrevId, setPrevPrevId] = useState(\"\");\r\n  const [prevId, setPrevId] = useState(\"\");\r\n  const [isPoped, setIsPoped] = useState(false);\r\n  const onPop = (id: string) => {\r\n    console.log(id);\r\n    setPrevPrevId(idClicked);\r\n    setIdClicked(id);\r\n    setIsPoped(true);\r\n  };\r\n  const cancelPopup = () => {\r\n    setIsPoped(false);\r\n  };\r\n\r\n  const onClick = () => {\r\n    setPrevId(idClicked);\r\n    if (prevPrevId === idClicked) {\r\n      setIdClicked(prevId);\r\n    } else {\r\n      setIdClicked(prevPrevId);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Wrapper>\r\n        <Grid>\r\n          {[1, 2, 3, 4].map((id, idx) => (\r\n            <Box\r\n              key={idx + \"\"}\r\n              variants={boxVariants}\r\n              whileHover=\"hover\"\r\n              animate=\"active\"\r\n              layoutId={id + \"\"}\r\n              onClick={() => onPop(id + \"\")}\r\n            >\r\n              {idClicked === id + \"\" ? <Circle layoutId=\"circle\" /> : null}\r\n            </Box>\r\n          ))}\r\n        </Grid>\r\n        <Btn onClick={onClick}>switch</Btn>\r\n        <AnimatePresence>\r\n          {isPoped ? (\r\n            <Overlay onClick={cancelPopup}>\r\n              <BigBox layoutId={idClicked}>\r\n                <Circle\r\n                  layoutId=\"circle\"\r\n                  style={{ scale: 2, backgroundColor: \"yellow\" }}\r\n                />\r\n              </BigBox>\r\n            </Overlay>\r\n          ) : null}\r\n        </AnimatePresence>\r\n      </Wrapper>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Motion;\r\n","import {\r\n  AnimatePresence,\r\n  motion,\r\n  useMotionValue,\r\n  useTransform,\r\n  useViewportScroll,\r\n} from \"framer-motion\";\r\nimport { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst AsBody = styled.div`\r\n  width: 100vw;\r\n  height: 100vh;\r\n  background: #151515;\r\n  overflow: hidden;\r\n  padding: 0;\r\n  margin: 0;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst AsContainer = styled.div`\r\n  width: 100vw;\r\n  height: 100vh;\r\n  position: relative;\r\n  top: 100px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Img = styled(motion.img)`\r\n  position: absolute;\r\n  max-width: 100vw;\r\n`;\r\n\r\nconst Btn = styled.button`\r\n  position: absolute;\r\n  top: 100px;\r\n  background: rgb(255, 255, 255, 0.9);\r\n  width: 40px;\r\n  height: 40px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  cursor: pointer;\r\n  font-weight: bold;\r\n  font-size: 12px;\r\n  z-index: 2;\r\n  border-radius: 50%;\r\n`;\r\n\r\nconst images = [\r\n  \"https://d33wubrfki0l68.cloudfront.net/dd23708ebc4053551bb33e18b7174e73b6e1710b/dea24/static/images/wallpapers/shared-colors@2x.png\",\r\n  \"https://d33wubrfki0l68.cloudfront.net/49de349d12db851952c5556f3c637ca772745316/cfc56/static/images/wallpapers/bridge-02@2x.png\",\r\n  \"https://d33wubrfki0l68.cloudfront.net/594de66469079c21fc54c14db0591305a1198dd6/3f4b1/static/images/wallpapers/bridge-01@2x.png\",\r\n];\r\n\r\nconst variants = {\r\n  enter: (direction: number) => {\r\n    return {\r\n      x: direction > 0 ? 1000 : -1000,\r\n      opacity: 0,\r\n    };\r\n  },\r\n  center: {\r\n    zIndex: 1,\r\n    x: 0,\r\n    opacity: 1,\r\n  },\r\n  exit: (direction: number) => {\r\n    return {\r\n      zIndex: 0,\r\n      x: direction > 0 ? -1000 : 1000,\r\n      opacity: 0,\r\n    };\r\n  },\r\n};\r\n\r\nfunction rotateIdx(min: number, max: number, value: number) {\r\n  const newIdx = value < min ? max - 1 : value > max - 1 ? 0 : value;\r\n  console.log(\"newIdx\", newIdx);\r\n  return newIdx;\r\n}\r\nfunction Movies() {\r\n  const [[page, direction], setPage] = useState([0, 0]);\r\n\r\n  const paginate = (newDirection: number) => {\r\n    setPage(([currPage, direction]) => {\r\n      const newPage = rotateIdx(0, images.length, currPage + newDirection);\r\n      return [newPage, newDirection];\r\n    });\r\n  };\r\n\r\n  return (\r\n    <AsBody>\r\n      <AsContainer>\r\n        <>\r\n          <AnimatePresence initial={false} custom={direction}>\r\n            <Img\r\n              src={images[page]}\r\n              key={page}\r\n              custom={direction}\r\n              variants={variants}\r\n              initial=\"enter\"\r\n              animate=\"center\"\r\n              exit=\"exit\"\r\n              transition={{\r\n                x: { type: \"spring\", stiffness: 300, damping: 30 },\r\n                opacity: { duration: 0.2 },\r\n              }}\r\n            />\r\n          </AnimatePresence>\r\n        </>\r\n        <Btn style={{ left: 100 }} onClick={() => paginate(-1)}>\r\n          prev\r\n        </Btn>\r\n        <Btn style={{ right: 100 }} onClick={() => paginate(1)}>\r\n          next\r\n        </Btn>\r\n      </AsContainer>\r\n    </AsBody>\r\n  );\r\n}\r\n\r\nexport default Movies;\r\n","import { AnimatePresence, motion } from \"framer-motion\";\r\nimport React, { useState } from \"react\";\r\nimport { useQuery } from \"react-query\";\r\nimport styled from \"styled-components\";\r\nimport { getMoviesListAPI, makeImgPath } from \"../../../api\";\r\nimport { IGetMoviesResult } from \"../../../atoms\";\r\n\r\nconst InnerWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\nconst Title = styled.h1`\r\n  font-weight: bold;\r\n`;\r\n\r\nconst SliderWrapper = styled.div<{ xLength?: number }>`\r\n  margin: 0px auto;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  width: ${(props) => props.xLength}px;\r\n  min-width: ${(props) => props.xLength}px;\r\n  position: relative;\r\n  max-width: 95%;\r\n`;\r\n\r\nconst SliderInnerWrapper = styled.div<{ xLength?: number }>`\r\n  margin: 0px auto;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  width: ${(props) => props.xLength}px;\r\n  position: relative;\r\n  padding: 100px 0px;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst CardWrapper = styled(motion.div)<{\r\n  xLength?: number;\r\n  isInitial?: boolean;\r\n  margin?: number;\r\n}>`\r\n  display: float;\r\n  transition: transform ${(props) => (props.isInitial ? 0 : 0.5)}s;\r\n  transform: translateX(${(props) => (props.xLength ? -props.xLength : 0)}px);\r\n  div {\r\n    margin-right: ${(props) => props.margin}px;\r\n    transform-origin: bottom;\r\n  }\r\n`;\r\n\r\nconst Card = styled(motion.div)<{ width?: number; bgPhoto?: string }>`\r\n  width: ${(props) => props.width}px;\r\n  height: 300px;\r\n  background-image: url(${(props) => props.bgPhoto});\r\n  background-size: cover;\r\n  background-position: center center;\r\n  display: flex;\r\n  align-items: flex-end;\r\n  z-index: 9999;\r\n`;\r\n\r\nconst CardTitle = styled.p`\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  color: white;\r\n  padding: 5px 3px;\r\n  min-height: 50px;\r\n  width: 100%;\r\n`;\r\nconst Btn = styled.button`\r\n  position: absolute;\r\n  top: 200px;\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 20px;\r\n`;\r\n\r\nfunction CardSlider({\r\n  cate,\r\n}: {\r\n  cate: \"now_playing\" | \"popular\" | \"top_rated\";\r\n}) {\r\n  const CARD_WIDTH = 200;\r\n  const CARD_MARGIN = 3;\r\n  const CARD_OFFSET_WIDTH = CARD_WIDTH + CARD_MARGIN;\r\n  const CARD_QNTY = 7; //  1 to 7\r\n  const DATA_QNTY_SHOWED = 20;\r\n  const [currIdx, setCurrIdx] = useState(0);\r\n  const [arrLength, setArrLength] = useState(DATA_QNTY_SHOWED);\r\n  const [xLength, setXLength] = useState(\r\n    arrLength * CARD_OFFSET_WIDTH - CARD_MARGIN\r\n  );\r\n  const [isInitial, setIsInitial] = useState(true);\r\n\r\n  const { isLoading, data } = useQuery<IGetMoviesResult>([\"movies\", cate], () =>\r\n    getMoviesListAPI(cate)\r\n  );\r\n\r\n  const onNextCard = (\r\n    increment: number,\r\n    e: React.MouseEvent<HTMLButtonElement>\r\n  ) => {\r\n    setIsInitial(false);\r\n    const newlength = increment * CARD_OFFSET_WIDTH;\r\n\r\n    setXLength((curr) => {\r\n      return curr + newlength > arrLength * CARD_OFFSET_WIDTH * 2 ||\r\n        curr + newlength < 0\r\n        ? curr\r\n        : curr + newlength;\r\n    });\r\n\r\n    setCurrIdx((curr) => {\r\n      console.log(\"abs\", Math.abs(curr));\r\n      if (Math.abs(curr) >= arrLength - 1) {\r\n        setTimeout(() => {\r\n          setIsInitial(true);\r\n          setCurrIdx(0);\r\n          setXLength(arrLength * CARD_OFFSET_WIDTH);\r\n        }, 700);\r\n      }\r\n      return curr + increment;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <InnerWrapper>\r\n      <Title> \"{cate}\" Slider /w infinite loop</Title>\r\n      <SliderWrapper xLength={CARD_OFFSET_WIDTH * CARD_QNTY - CARD_MARGIN}>\r\n        <SliderInnerWrapper\r\n          xLength={CARD_OFFSET_WIDTH * CARD_QNTY - CARD_MARGIN}\r\n        >\r\n          <CardWrapper\r\n            isInitial={isInitial}\r\n            xLength={xLength}\r\n            margin={CARD_MARGIN}\r\n          >\r\n            {data?.results.slice(0, DATA_QNTY_SHOWED).map((item, idx) => (\r\n              <Card\r\n                whileHover={{ scale: 1.2, transition: { duration: 0.5 } }}\r\n                key={idx}\r\n                width={CARD_WIDTH}\r\n                bgPhoto={makeImgPath(\"w500\", item.poster_path)}\r\n              >\r\n                <CardTitle>{item.title}</CardTitle>\r\n              </Card>\r\n            ))}\r\n            {data?.results.slice(0, DATA_QNTY_SHOWED).map((item, idx) => (\r\n              <Card\r\n                whileHover={{ scale: 1.2, transition: { duration: 0.5 } }}\r\n                key={idx}\r\n                width={CARD_WIDTH}\r\n                bgPhoto={makeImgPath(\"w500\", item.poster_path)}\r\n              >\r\n                <CardTitle>{item.title}</CardTitle>\r\n              </Card>\r\n            ))}\r\n            {data?.results.slice(0, DATA_QNTY_SHOWED).map((item, idx) => (\r\n              <Card\r\n                whileHover={{ scale: 1.2, transition: { duration: 0.5 } }}\r\n                key={idx}\r\n                width={CARD_WIDTH}\r\n                bgPhoto={makeImgPath(\"w500\", item.poster_path)}\r\n              >\r\n                <CardTitle>{item.title}</CardTitle>\r\n              </Card>\r\n            ))}\r\n          </CardWrapper>\r\n        </SliderInnerWrapper>\r\n        <Btn onClick={(e) => onNextCard(-1, e)} style={{ left: \"-20px\" }}>\r\n          Prev\r\n        </Btn>\r\n        <Btn onClick={(e) => onNextCard(1, e)} style={{ right: \"-20px\" }}>\r\n          Next\r\n        </Btn>\r\n      </SliderWrapper>\r\n    </InnerWrapper>\r\n  );\r\n}\r\n\r\nexport default CardSlider;\r\n","import styled from \"styled-components\";\r\nimport CardSlider from \"../../components/motion/slider/CardSlider\";\r\nimport PageSlider from \"../../components/motion/slider/PageSlider\";\r\n\r\nconst Wrapper = styled.div`\r\n  padding: 20px;\r\n  padding-top: 100px;\r\n  background: linear-gradient(rgba(0, 0, 0, 0.1), rgba(0, 0, 0, 0.5));\r\n  width: 100%;\r\n  min-width: fit-content;\r\n  height: 100%;\r\n`;\r\n\r\nconst Divider = styled.hr`\r\n  color: rgba(255, 255, 255, 0.5);\r\n  margin: 20px;\r\n`;\r\n\r\nfunction Slider() {\r\n  return (\r\n    <Wrapper>\r\n      <PageSlider cate=\"top_rated\" />\r\n      <Divider />\r\n      <CardSlider cate=\"now_playing\" />\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport default Slider;\r\n","import { useQuery } from \"react-query\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { getMovieDetail, makeImgPath } from \"../../api\";\r\n\r\nimport { IGetMoviesResult, IMovie } from \"../../atoms\";\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100vw;\r\n  height: 100vh;\r\n  padding: 20px;\r\n  padding-top: 100px;\r\n  background-color: rgba(0, 0, 0, 0.8);\r\n  /* display: grid;\r\n  grid-template-columns: 4fr 6fr;\r\n  gap: 10px; */\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  color: white;\r\n  font-size: 1.2rem;\r\n`;\r\n\r\nconst InfoWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  min-width: 450px;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.4);\r\n  border-radius: 10px;\r\n  padding: 20px;\r\n  opacity: 0.8;\r\n`;\r\n\r\nconst ImgWrapper = styled.div`\r\n  width: fit-content;\r\n  height: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Image = styled.img`\r\n  margin-right: 10px;\r\n  border-radius: 10px;\r\n  align-self: right;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-size: 3rem;\r\n`;\r\nconst SubTitle = styled.h2`\r\n  font-size: 2rem;\r\n  margin: 0;\r\n  color: rgb(220, 20, 60, 0.6);\r\n\r\n  &:before {\r\n    width: 10px;\r\n    height: 10px;\r\n    background-color: red;\r\n  }\r\n`;\r\n\r\nconst Genres = styled.ul`\r\n  padding: 10px;\r\n`;\r\n\r\nconst Genre = styled.li``;\r\nconst Overview = styled.p`\r\n  padding: 10px;\r\n`;\r\nconst VoteAvg = styled.div`\r\n  padding: 10px;\r\n`;\r\nconst ReleasedDate = styled.p`\r\n  padding: 10px;\r\n`;\r\n\r\nfunction MovieDetail() {\r\n  const { movieId } = useParams<{ movieId: string }>();\r\n  console.log(\"movieId\", movieId);\r\n\r\n  const { isLoading, data } = useQuery<IMovie>([\"detail\", movieId], () =>\r\n    getMovieDetail(movieId)\r\n  );\r\n\r\n  console.log(data);\r\n  return (\r\n    <Wrapper>\r\n      {data ? (\r\n        <>\r\n          <ImgWrapper>\r\n            <Image src={makeImgPath(\"w500\", data.poster_path)} />\r\n          </ImgWrapper>\r\n          <InfoWrapper>\r\n            <Title>{data.title}</Title>\r\n            <SubTitle>Genre</SubTitle>\r\n            <Genres>\r\n              {data.genres.map((genre) => (\r\n                <Genre>◎&nbsp;{genre.name}</Genre>\r\n              ))}\r\n            </Genres>\r\n            <SubTitle>Grade</SubTitle>\r\n            <VoteAvg>{data.vote_average}</VoteAvg>\r\n            <SubTitle>Overview</SubTitle>\r\n            <Overview>{data.overview}</Overview>\r\n            <SubTitle>Release Date</SubTitle>\r\n            <ReleasedDate>{data.release_date}</ReleasedDate>\r\n          </InfoWrapper>\r\n        </>\r\n      ) : null}\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport default MovieDetail;\r\n","import { motion } from \"framer-motion\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const GridWrapper = styled.div`\r\n  background-color: rgb(0, 0, 0, 0.9);\r\n  color: white;\r\n  width: 100%;\r\n  min-width: fit-content;\r\n  height: 100%;\r\n  min-height: 100vh;\r\n  padding-top: 100px;\r\n  display: grid;\r\n  grid-template-columns: 1fr repeat(12, minmax(max-content, 6.25rem)) 1fr;\r\n  grid-template-rows: max-content;\r\n  gap: 10px;\r\n`;\r\n\r\nexport const FullWidthSection = styled.section`\r\n  background-color: rgb(0, 0, 0, 1);\r\n  grid-column: 1 / span 14;\r\n`;\r\n\r\nexport const MaxWidthSection = styled.div`\r\n  background-color: rgb(0, 0, 0, 0.5);\r\n  grid-column: 2 / span 12;\r\n`;\r\n\r\nexport const Row = styled.div`\r\n  span {\r\n    display: block;\r\n    margin: 10px;\r\n    font-weight: bold;\r\n  }\r\n`;\r\n\r\nexport interface IGridBox {\r\n  columns: number;\r\n  rows: number;\r\n  itemMinHeight: number;\r\n}\r\nexport const GridBox = styled(motion.div)<IGridBox>`\r\n  padding: 10px;\r\n  display: grid;\r\n  grid-template-columns: repeat(${(props) => props.columns}, 1fr);\r\n  grid-template-rows: repeat(\r\n    ${(props) => props.rows},\r\n    ${(props) => props.itemMinHeight}px\r\n  );\r\n  gap: calc(1rem * 0.4);\r\n\r\n  @media ${(props) => props.theme.breakpoints.r1280} {\r\n    grid-template-columns: repeat(5, 1fr);\r\n  }\r\n  @media ${(props) => props.theme.breakpoints.r1080} {\r\n    grid-template-columns: repeat(4, 1fr);\r\n  }\r\n  @media ${(props) => props.theme.breakpoints.r960} {\r\n    grid-template-columns: repeat(3, 1fr);\r\n  }\r\n  @media ${(props) => props.theme.breakpoints.r720} {\r\n  }\r\n  @media ${(props) => props.theme.breakpoints.r640} {\r\n  }\r\n  @media ${(props) => props.theme.breakpoints.r540} {\r\n    grid-template-columns: repeat(2, 1fr);\r\n    min-width: 500px;\r\n  }\r\n  @media ${(props) => props.theme.breakpoints.r360} {\r\n  }\r\n\r\n  div {\r\n    min-height: ${(props) => props.itemMinHeight}px;\r\n  }\r\n`;\r\n\r\nexport interface IGridItem {\r\n  startCol?: number;\r\n  spanCol?: number;\r\n  startRow?: number;\r\n  spanRow?: number;\r\n  bgPhoto?: string;\r\n}\r\n\r\nexport const GridItem = styled(motion.div)<IGridItem>`\r\n  border: 1px solid rgba(255, 255, 255, 0.6);\r\n  grid-column: ${(props) => props.startCol} / span ${(props) => props.spanCol};\r\n  grid-row: ${(props) => (props.startRow ? props.startRow : 0)} / span\r\n    ${(props) => (props.spanRow ? props.spanRow : 0)};\r\n  color: black;\r\n  background-color: rgb(255, 255, 255, 0.7);\r\n  margin: calc(1rem * 0.2);\r\n\r\n  @media ${(props) => props.theme.breakpoints.r720} {\r\n    grid-column: span 1;\r\n    grid-row: auto;\r\n  }\r\n`;\r\n\r\nexport const FlexBox = styled.div`\r\n  border: 2px solid white;\r\n  background-color: rgb(0, 0, 0, 0.5);\r\n  padding: 10px;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n`;\r\nexport const FlexItem = styled.div`\r\n  border: 1px solid blue;\r\n  background-color: rgb(0, 0, 0, 0.8);\r\n  flex: 23%;\r\n  padding: 10px;\r\n  margin: calc(1rem * 0.2);\r\n  @media ${(props) => props.theme.breakpoints.r720} {\r\n    flex: 48%;\r\n    max-width: 48%;\r\n  }\r\n  @media ${(props) => props.theme.breakpoints.r540} {\r\n    flex: 100%;\r\n    max-width: 100%;\r\n  }\r\n`;\r\n\r\nconst RedeclareGridItem = styled(GridItem)`\r\n  @media ${(props) => props.theme.breakpoints.r1280} {\r\n  }\r\n`;\r\nexport default function GridFlexCss() {\r\n  return (\r\n    <GridWrapper style={{ backgroundColor: \"#00d2d3\" }}>\r\n      <FullWidthSection style={{ backgroundColor: \"##ff6b6b\" }}>\r\n        FullWidthSection = NavBar\r\n      </FullWidthSection>\r\n      <MaxWidthSection style={{ backgroundColor: \"##1545e4\" }}>\r\n        MaxWidthSection = Contents\r\n        <Row>\r\n          <span>GridBox</span>\r\n          <GridBox columns={4} rows={4} itemMinHeight={200}>\r\n            <GridItem startCol={1} spanCol={2} startRow={1} spanRow={2}>\r\n              GridItem1\r\n            </GridItem>\r\n            <GridItem startCol={3} spanCol={2} startRow={0} spanRow={0}>\r\n              GridItem2\r\n            </GridItem>\r\n            <GridItem startCol={1} spanCol={2} startRow={3} spanRow={1}>\r\n              GridItem3\r\n            </GridItem>\r\n            <GridItem startCol={3} spanCol={2} startRow={2} spanRow={2}>\r\n              GridItem4\r\n            </GridItem>\r\n            <GridItem startCol={1} spanCol={4} startRow={4} spanRow={1}>\r\n              GridItem5\r\n            </GridItem>\r\n          </GridBox>\r\n        </Row>\r\n        <Row>\r\n          <span>FexBox</span>\r\n          <FlexBox>\r\n            <FlexItem>FlexItem 1</FlexItem>\r\n            <FlexItem>FlexItem 2</FlexItem>\r\n            <FlexItem>FlexItem 3</FlexItem>\r\n            <FlexItem>FlexItem 4</FlexItem>\r\n            <FlexItem>FlexItem 5</FlexItem>\r\n          </FlexBox>\r\n        </Row>\r\n      </MaxWidthSection>\r\n    </GridWrapper>\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport ReactSelect from \"./ReactSelect\";\r\n\r\nconst Wrapper = styled.div`\r\n  position: absolute;\r\n  top: 30px;\r\n  left: 30px;\r\n  z-index: 200;\r\n  width: auto;\r\n  height: auto;\r\n  max-width: fit-content !important;\r\n  max-height: fit-content !important;\r\n  min-width: fit-content !important;\r\n  min-height: fit-content !important;\r\n`;\r\nconst SelectTag = styled.select`\r\n  height: 30px;\r\n  background: rgba(0, 0, 0, 0.3);\r\n  color: #fff;\r\n  text-shadow: 0 1px 0 rgba(255, 251, 251, 0.4);\r\n  text-align: center;\r\n\r\n  &:focus {\r\n    border-color: red;\r\n  }\r\n  option {\r\n    background: rgba(206, 152, 152, 0.8);\r\n  }\r\n  option[selected=\"true\"] {\r\n    font-weight: bold;\r\n    color: blue;\r\n  }\r\n`;\r\n\r\ninterface ISelectProps {\r\n  key: number;\r\n  value: number;\r\n  text: string;\r\n}\r\n\r\nfunction Select({\r\n  selectProps,\r\n  onChange,\r\n  qntyShowed,\r\n}: {\r\n  selectProps: ISelectProps[];\r\n  onChange: (e: React.FormEvent<HTMLSelectElement>) => void;\r\n  qntyShowed: number;\r\n}) {\r\n  return (\r\n    <Wrapper>\r\n      <SelectTag onChange={onChange}>\r\n        {selectProps.map((opt: ISelectProps, idx) => (\r\n          <option\r\n            key={idx}\r\n            value={opt.value}\r\n            selected={opt.value === qntyShowed}\r\n          >\r\n            {opt.text}\r\n          </option>\r\n        ))}\r\n      </SelectTag>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport default Select;\r\n","import { AnimatePresence, motion } from \"framer-motion\";\r\nimport React, { useState } from \"react\";\r\nimport { useQuery } from \"react-query\";\r\nimport styled from \"styled-components\";\r\nimport { getMoviesListAPI, makeImgPath } from \"../../api\";\r\nimport { IGetMoviesResult } from \"../../atoms\";\r\nimport {\r\n  FullWidthSection,\r\n  GridBox,\r\n  GridItem,\r\n  GridWrapper,\r\n  MaxWidthSection,\r\n} from \"../responsive/GridFlexCss\";\r\nimport Select from \"../common/Select\";\r\n\r\nconst Title = styled.h1`\r\n  font-size: 2rem;\r\n  font-weight: bold;\r\n  padding: 20px 10px;\r\n`;\r\n\r\nconst MovieCard = styled(GridItem)`\r\n  width: 100%;\r\n  background-image: url(${(props) => props.bgPhoto});\r\n  background-size: cover;\r\n  background-position: center center;\r\n  position: relative;\r\n  min-height: 300px;\r\n  border-radius: 15px;\r\n  transform-origin: center bottom;\r\n  box-shadow: 0px 2px 3px white, 0px 3px 5px white;\r\n`;\r\n\r\nconst ListIndicator = styled(GridItem)`\r\n  grid-column: span 2;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  color: white;\r\n  font-size: 2.5rem;\r\n  background-color: rgba(24, 20, 20, 0.6);\r\n  border-radius: 15px;\r\n  position: relative;\r\n  cursor: pointer;\r\n  @media ${(props) => props.theme.breakpoints.r720} {\r\n    grid-row: span 2;\r\n    grid-column: auto;\r\n  }\r\n`;\r\n\r\nconst MovieCardTitle = styled.h2`\r\n  position: absolute;\r\n  bottom: 0;\r\n  color: white;\r\n  width: 100%;\r\n  font-size: 1rem;\r\n  height: 2.5rem;\r\n  background-color: rgba(0, 0, 0, 0.8);\r\n`;\r\n\r\nconst movieCardProps = {\r\n  hover: {\r\n    scale: 1.05,\r\n    zIndex: 10,\r\n    boxShadow: \"0px 10px 10px rgb(255 255 255), red 0px 20px 30px\",\r\n  },\r\n};\r\n\r\nconst variants = {\r\n  enter: (direction: number) => {\r\n    return {\r\n      x: direction > 0 ? 1000 : -1000,\r\n      opacity: 0,\r\n    };\r\n  },\r\n  center: {\r\n    zIndex: 1,\r\n    x: 0,\r\n    opacity: 1,\r\n  },\r\n  exit: (direction: number) => {\r\n    return {\r\n      zIndex: 0,\r\n      x: direction > 0 ? -1000 : 1000,\r\n      opacity: 0,\r\n    };\r\n  },\r\n};\r\n\r\nconst selectProps = [\r\n  { key: 0, value: 0, text: \"표시 개수\" },\r\n  { key: 1, value: 10, text: \"10개씩 표시\" },\r\n  { key: 2, value: 20, text: \"20개식 표시\" },\r\n];\r\n\r\nfunction GridCss() {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [isNowComplete, setIsNowComplete] = useState(true);\r\n  const [isTopComplete, setIsTopComplete] = useState(false);\r\n  const [pageNowPlay, setPpageNowPlay] = useState(0);\r\n  const [pageTopRated, setPageTopRated] = useState(0);\r\n  const [qntyNowShowed, setQntyNowShowed] = useState(10);\r\n  const [qntyTopShowed, setQntyTopShowed] = useState(10);\r\n\r\n  const onToggleOpen = () => {\r\n    // setIsOpen((curr) => !curr);\r\n    // setAnimeKey((curr) => curr + 1);\r\n  };\r\n\r\n  const { isLoading: isLoadingNowPlaying, data: nowPlayingData } =\r\n    useQuery<IGetMoviesResult>([\"movies\", \"now_playing\"], () =>\r\n      getMoviesListAPI(\"now_playing\")\r\n    );\r\n\r\n  const { isLoading: isLoadingTopRatedData, data: topRatedData } =\r\n    useQuery<IGetMoviesResult>([\"movies\", \"top_rated\"], () =>\r\n      getMoviesListAPI(\"top_rated\")\r\n    );\r\n\r\n  const onNextNowPlay = (direction: number) => {\r\n    if (!nowPlayingData) return;\r\n    const maxPage = Math.ceil(nowPlayingData.results.length / qntyNowShowed);\r\n    if (maxPage === 1) {\r\n      alert(\"다음페이지가 없습니다. 카테고리별 최대 20개의 영화목록 표시됨.\");\r\n      return;\r\n    }\r\n    setIsNowComplete((curr) => !curr);\r\n    setPpageNowPlay((curr) => {\r\n      return curr + direction >= maxPage ? 0 : curr + direction;\r\n    });\r\n  };\r\n\r\n  const onNextTopRated = (direction: number) => {\r\n    if (!topRatedData) return;\r\n    const maxPage = Math.ceil(topRatedData.results.length / qntyTopShowed);\r\n    if (maxPage === 1)\r\n      if (maxPage === 1) {\r\n        alert(\"다음페이지가 없습니다. 카테고리별 최대 20개의 영화목록 표시됨.\");\r\n        return;\r\n      }\r\n    setIsTopComplete((curr) => !curr);\r\n    setPageTopRated((curr) => {\r\n      return curr + direction >= maxPage ? 0 : curr + direction;\r\n    });\r\n  };\r\n\r\n  const onIsNowComplete = () => setIsNowComplete((curr) => !curr);\r\n  const onIsTopComplete = () => setIsTopComplete((curr) => !curr);\r\n\r\n  const onNowListChange = (e: React.FormEvent<HTMLSelectElement>) => {\r\n    const {\r\n      currentTarget: { value },\r\n    } = e;\r\n    setPpageNowPlay(0);\r\n    setQntyNowShowed(Number(value) <= 0 ? 10 : Number(value));\r\n  };\r\n  const onTopListChange = (e: React.FormEvent<HTMLSelectElement>) => {\r\n    const {\r\n      currentTarget: { value },\r\n    } = e;\r\n    setPageTopRated(0);\r\n    setQntyTopShowed(Number(value) <= 0 ? 10 : Number(value));\r\n  };\r\n  return (\r\n    <GridWrapper>\r\n      <MaxWidthSection>\r\n        <AnimatePresence initial={false} onExitComplete={onIsNowComplete}>\r\n          {isNowComplete && (\r\n            <GridBox\r\n              key={pageNowPlay}\r\n              variants={variants}\r\n              initial=\"enter\"\r\n              animate=\"center\"\r\n              exit=\"exit\"\r\n              columns={6}\r\n              rows={2}\r\n              itemMinHeight={300}\r\n              style={{ position: \"relative\" }}\r\n            >\r\n              <ListIndicator onClick={() => onNextNowPlay(1)}>\r\n                Now Playing &rarr;\r\n              </ListIndicator>\r\n              <Select\r\n                onChange={onNowListChange}\r\n                selectProps={selectProps}\r\n                qntyShowed={qntyNowShowed}\r\n              ></Select>\r\n              {nowPlayingData?.results\r\n                .slice(\r\n                  pageNowPlay * qntyNowShowed,\r\n                  pageNowPlay * qntyNowShowed + qntyNowShowed\r\n                )\r\n                .map((movie) => {\r\n                  return (\r\n                    <MovieCard\r\n                      variants={movieCardProps}\r\n                      whileHover=\"hover\"\r\n                      initial={{ opacity: 0 }}\r\n                      animate={{ opacity: 1 }}\r\n                      bgPhoto={makeImgPath(\"w200\", movie.poster_path)}\r\n                    >\r\n                      <MovieCardTitle>{movie.title}</MovieCardTitle>\r\n                    </MovieCard>\r\n                  );\r\n                })}\r\n            </GridBox>\r\n          )}\r\n        </AnimatePresence>\r\n\r\n        <GridBox\r\n          key={pageTopRated}\r\n          columns={6}\r\n          rows={2}\r\n          itemMinHeight={300}\r\n          style={{ position: \"relative\" }}\r\n        >\r\n          <Select\r\n            onChange={onTopListChange}\r\n            selectProps={selectProps}\r\n            qntyShowed={qntyTopShowed}\r\n          ></Select>\r\n          <ListIndicator onClick={() => onNextTopRated(1)}>\r\n            Top Rated &rarr;\r\n          </ListIndicator>\r\n          {topRatedData?.results\r\n            .slice(\r\n              pageTopRated * qntyTopShowed,\r\n              pageTopRated * qntyTopShowed + qntyTopShowed\r\n            )\r\n            .map((movie, idx) => {\r\n              return (\r\n                <MovieCard\r\n                  variants={movieCardProps}\r\n                  whileHover=\"hover\"\r\n                  initial={{ opacity: 0 }}\r\n                  animate={{ scale: [0.9, 1.1, 1], opacity: 1 }}\r\n                  transition={{ type: \"tween\", delay: idx / 10 }}\r\n                  bgPhoto={makeImgPath(\"w200\", movie.poster_path)}\r\n                >\r\n                  <MovieCardTitle>{movie.title}</MovieCardTitle>\r\n                </MovieCard>\r\n              );\r\n            })}\r\n        </GridBox>\r\n      </MaxWidthSection>\r\n    </GridWrapper>\r\n  );\r\n}\r\n\r\nexport default GridCss;\r\n","import { motion } from \"framer-motion\";\r\nimport styled from \"styled-components\";\r\nimport MovieLayout from \"../../components/movie/MovieLayout\";\r\n\r\nfunction MovieHome() {\r\n  return (\r\n    <>\r\n      <MovieLayout></MovieLayout>;\r\n    </>\r\n  );\r\n}\r\n\r\nexport default MovieHome;\r\n","import { useState } from \"react\";\r\nimport { useQuery } from \"react-query\";\r\nimport styled from \"styled-components\";\r\nimport { getMoviesListAPI, makeImgPath } from \"../../api\";\r\nimport { IGetMoviesResult } from \"../../atoms\";\r\nimport {\r\n  FullWidthSection,\r\n  GridBox,\r\n  GridItem,\r\n  GridWrapper,\r\n  MaxWidthSection,\r\n} from \"./GridFlexCss\";\r\n\r\nconst Title = styled.h1`\r\n  font-size: 2rem;\r\n  font-weight: bold;\r\n  padding: 20px 10px;\r\n`;\r\nconst MovieCard = styled(GridItem)`\r\n  width: 100%;\r\n  background-image: url(${(props) => props.bgPhoto});\r\n  background-size: cover;\r\n  background-position: center center;\r\n  position: relative;\r\n  min-height: 300px;\r\n`;\r\n\r\nconst ListIndicator = styled(GridItem)`\r\n  grid-column: span 2;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  color: white;\r\n  font-size: 2.5rem;\r\n  background-color: rgba(0, 0, 0, 0.6);\r\n  @media ${(props) => props.theme.breakpoints.r720} {\r\n    grid-row: span 2;\r\n    grid-column: auto;\r\n  }\r\n`;\r\n\r\nconst MovieCardTitle = styled.h2`\r\n  position: absolute;\r\n  bottom: 0;\r\n  color: white;\r\n  width: 100%;\r\n  font-size: 1rem;\r\n  height: 2.5rem;\r\n  background-color: rgba(0, 0, 0, 0.8);\r\n`;\r\nfunction GridCss() {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [animeKey, setAnimeKey] = useState(0);\r\n  const onToggleOpen = () => {\r\n    setIsOpen((curr) => !curr);\r\n    setAnimeKey((curr) => curr + 1);\r\n  };\r\n\r\n  const { isLoading: isLoadingNowPlaying, data: nowPlayingData } =\r\n    useQuery<IGetMoviesResult>([\"movies\", \"now_playing\"], () =>\r\n      getMoviesListAPI(\"now_playing\")\r\n    );\r\n\r\n  const { isLoading: isLoadingTopRatedData, data: topRatedData } =\r\n    useQuery<IGetMoviesResult>([\"movies\", \"top_rated\"], () =>\r\n      getMoviesListAPI(\"top_rated\")\r\n    );\r\n  return (\r\n    <GridWrapper>\r\n      <MaxWidthSection>\r\n        <GridBox columns={6} rows={4} itemMinHeight={300}>\r\n          <ListIndicator>Now Playing &rarr;</ListIndicator>\r\n          {nowPlayingData?.results.slice(0, 10).map((movie) => {\r\n            return (\r\n              <MovieCard bgPhoto={makeImgPath(\"w200\", movie.poster_path)}>\r\n                <MovieCardTitle>{movie.title}</MovieCardTitle>\r\n              </MovieCard>\r\n            );\r\n          })}\r\n\r\n          <ListIndicator>Top Rated &rarr;</ListIndicator>\r\n          {topRatedData?.results.slice(0, 10).map((movie) => {\r\n            return (\r\n              <MovieCard bgPhoto={makeImgPath(\"w200\", movie.poster_path)}>\r\n                <MovieCardTitle>{movie.title}</MovieCardTitle>\r\n              </MovieCard>\r\n            );\r\n          })}\r\n        </GridBox>\r\n      </MaxWidthSection>\r\n    </GridWrapper>\r\n  );\r\n}\r\n\r\nexport default GridCss;\r\n","import { useRecoilValue } from \"recoil\";\nimport styled, { createGlobalStyle, ThemeProvider } from \"styled-components\";\nimport { darkModeState } from \"./atoms\";\nimport { BrowserRouter, HashRouter, Route, Switch } from \"react-router-dom\";\nimport Movie from \"./routes/Movie\";\nimport { darkTheme, lightTheme } from \"./theme\";\nimport UpperMenu from \"./components/UpperMenu\";\nimport Coinlist from \"./routes/coin/Coinlist\";\nimport CoinInfo from \"./components/coin/CoinInfo\";\nimport Todolist from \"./routes/todo/Todolist\";\nimport Motion from \"./components/motion/Motion\";\nimport AniPresence from \"./components/motion/AniPresence\";\nimport Slider from \"./routes/slider/Slider\";\nimport MovieDetail from \"./components/movie/MovieDetail\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport ResponsiveLayout from \"./routes/ResponsiveLayout\";\nimport GridFlexCss from \"./components/responsive/GridFlexCss\";\nimport MovieHome from \"./routes/movie/MovieHome\";\nimport ResponsiveGrid from \"./components/responsive/ResponsiveGrid\";\n\nconst GlobalStyle = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, menu, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmain, menu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, main, menu, nav, section {\n  display: block;\n}\n/* HTML5 hidden-attribute fix for newer browsers */\n*[hidden] {\n    display: none;\n}\nbody {\n  line-height: 1;\n}\nmenu, ol, ul {\n  list-style: none;\n}\nblockquote, q {\n  quotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: '';\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n* {\n  box-sizing: border-box;\n}\nbody {\n  font-weight: 300;\n  font-family: 'Source Sans Pro', sans-serif;\n  color:${(props) => props.theme.textColor};\n  line-height: 1.2;\n  background-color: ${(props) => props.theme.bgColor}\n}\na {\n  text-decoration:none;\n  color:inherit;\n}\n`;\n\nfunction App() {\n  const isDarkMode = useRecoilValue(darkModeState);\n\n  return (\n    <>\n      <ThemeProvider theme={isDarkMode ? darkTheme : lightTheme}>\n        <GlobalStyle />\n\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\n          <UpperMenu />\n          <Switch>\n            <Route path=\"/coinlist\">\n              <Coinlist />\n            </Route>\n            <Route path=\"/coin/:coinId\">\n              <CoinInfo />\n            </Route>\n            <Route path=\"/todolist\">\n              <Todolist />\n            </Route>\n            <Route path=\"/motion\">\n              <Motion />\n            </Route>\n            <Route path=\"/responsive\">\n              <ResponsiveGrid />\n            </Route>\n            <Route path=\"/grid\">\n              <GridFlexCss />\n            </Route>\n            <Route path=\"/animate\">\n              <AniPresence />\n            </Route>\n            <Route path=\"/slider\">\n              <Slider />\n            </Route>\n            <Route path=\"/movies\">\n              <Movie />\n            </Route>\n            <Route path=\"/pop\">\n              <Movie />\n            </Route>\n            <Route path=\"/detail:movieId\">\n              <MovieDetail />\n            </Route>\n\n            <Route path=\"/\">\n              <MovieHome />\n            </Route>\n          </Switch>\n        </BrowserRouter>\n      </ThemeProvider>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport { RecoilRoot } from \"recoil\";\nimport App from \"./App\";\n\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <QueryClientProvider client={queryClient}>\n        <App />\n      </QueryClientProvider>\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}